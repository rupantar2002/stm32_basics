
test1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001470  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000008c  08001600  08001600  00011600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800168c  0800168c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800168c  0800168c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800168c  0800168c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800168c  0800168c  0001168c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001690  08001690  00011690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001694  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000170  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001d4  200001d4  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 14 .debug_info   00001992  00000000  00000000  000200d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000651  00000000  00000000  00021a69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  000220c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000c0  00000000  00000000  000221d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00019045  00000000  00000000  00022298  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000147b  00000000  00000000  0003b2dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0008c994  00000000  00000000  0003c758  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000c2c  00000000  00000000  000c90ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000040  00000000  00000000  000c9d18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080015e8 	.word	0x080015e8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	080015e8 	.word	0x080015e8

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000278:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800027c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000280:	f003 0301 	and.w	r3, r3, #1
 8000284:	2b00      	cmp	r3, #0
 8000286:	d013      	beq.n	80002b0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000288:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800028c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000290:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000294:	2b00      	cmp	r3, #0
 8000296:	d00b      	beq.n	80002b0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000298:	e000      	b.n	800029c <ITM_SendChar+0x2c>
    {
      __NOP();
 800029a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800029c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d0f9      	beq.n	800029a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002a6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002aa:	687a      	ldr	r2, [r7, #4]
 80002ac:	b2d2      	uxtb	r2, r2
 80002ae:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	370c      	adds	r7, #12
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr

080002be <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002be:	b580      	push	{r7, lr}
 80002c0:	b086      	sub	sp, #24
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	60f8      	str	r0, [r7, #12]
 80002c6:	60b9      	str	r1, [r7, #8]
 80002c8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ca:	2300      	movs	r3, #0
 80002cc:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ce:	2300      	movs	r3, #0
 80002d0:	617b      	str	r3, [r7, #20]
 80002d2:	e009      	b.n	80002e8 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002d4:	68bb      	ldr	r3, [r7, #8]
 80002d6:	1c5a      	adds	r2, r3, #1
 80002d8:	60ba      	str	r2, [r7, #8]
 80002da:	781b      	ldrb	r3, [r3, #0]
 80002dc:	4618      	mov	r0, r3
 80002de:	f7ff ffc7 	bl	8000270 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	3301      	adds	r3, #1
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	429a      	cmp	r2, r3
 80002ee:	dbf1      	blt.n	80002d4 <_write+0x16>

  return len;
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	3718      	adds	r7, #24
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}
	...

080002fc <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	4603      	mov	r3, r0
 8000304:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	2b02      	cmp	r3, #2
 800030a:	d00a      	beq.n	8000322 <_get_log_level_string+0x26>
 800030c:	2b02      	cmp	r3, #2
 800030e:	dc0a      	bgt.n	8000326 <_get_log_level_string+0x2a>
 8000310:	2b00      	cmp	r3, #0
 8000312:	d002      	beq.n	800031a <_get_log_level_string+0x1e>
 8000314:	2b01      	cmp	r3, #1
 8000316:	d002      	beq.n	800031e <_get_log_level_string+0x22>
 8000318:	e005      	b.n	8000326 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800031a:	4b06      	ldr	r3, [pc, #24]	; (8000334 <_get_log_level_string+0x38>)
 800031c:	e003      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800031e:	4b06      	ldr	r3, [pc, #24]	; (8000338 <_get_log_level_string+0x3c>)
 8000320:	e001      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000322:	4b06      	ldr	r3, [pc, #24]	; (800033c <_get_log_level_string+0x40>)
 8000324:	e7ff      	b.n	8000326 <_get_log_level_string+0x2a>
    }
}
 8000326:	4618      	mov	r0, r3
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	08001600 	.word	0x08001600
 8000338:	08001608 	.word	0x08001608
 800033c:	08001610 	.word	0x08001610

08000340 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b084      	sub	sp, #16
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	60b9      	str	r1, [r7, #8]
 800034a:	607a      	str	r2, [r7, #4]
 800034c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 800034e:	4b0f      	ldr	r3, [pc, #60]	; (800038c <_log+0x4c>)
 8000350:	781b      	ldrb	r3, [r3, #0]
 8000352:	7bfa      	ldrb	r2, [r7, #15]
 8000354:	429a      	cmp	r2, r3
 8000356:	d814      	bhi.n	8000382 <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000358:	7bfb      	ldrb	r3, [r7, #15]
 800035a:	4618      	mov	r0, r3
 800035c:	f7ff ffce 	bl	80002fc <_get_log_level_string>
 8000360:	4603      	mov	r3, r0
 8000362:	4619      	mov	r1, r3
 8000364:	480a      	ldr	r0, [pc, #40]	; (8000390 <_log+0x50>)
 8000366:	f000 fd33 	bl	8000dd0 <iprintf>
	vfprintf(stdout, format, args);
 800036a:	4b0a      	ldr	r3, [pc, #40]	; (8000394 <_log+0x54>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	687a      	ldr	r2, [r7, #4]
 8000372:	68b9      	ldr	r1, [r7, #8]
 8000374:	4618      	mov	r0, r3
 8000376:	f000 facf 	bl	8000918 <vfiprintf>
	printf("\n");
 800037a:	200a      	movs	r0, #10
 800037c:	f000 fd3a 	bl	8000df4 <putchar>
 8000380:	e000      	b.n	8000384 <_log+0x44>
        return;
 8000382:	bf00      	nop
}
 8000384:	3710      	adds	r7, #16
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	20000004 	.word	0x20000004
 8000390:	08001618 	.word	0x08001618
 8000394:	20000060 	.word	0x20000060

08000398 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 8000398:	b40f      	push	{r0, r1, r2, r3}
 800039a:	b580      	push	{r7, lr}
 800039c:	b082      	sub	sp, #8
 800039e:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003a0:	f107 0314 	add.w	r3, r7, #20
 80003a4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	6939      	ldr	r1, [r7, #16]
 80003aa:	2001      	movs	r0, #1
 80003ac:	f7ff ffc8 	bl	8000340 <_log>
    va_end(args);
}
 80003b0:	bf00      	nop
 80003b2:	3708      	adds	r7, #8
 80003b4:	46bd      	mov	sp, r7
 80003b6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003ba:	b004      	add	sp, #16
 80003bc:	4770      	bx	lr
	...

080003c0 <__NVIC_EnableIRQ>:
{
 80003c0:	b480      	push	{r7}
 80003c2:	b083      	sub	sp, #12
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	4603      	mov	r3, r0
 80003c8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80003ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	db0b      	blt.n	80003ea <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80003d2:	79fb      	ldrb	r3, [r7, #7]
 80003d4:	f003 021f 	and.w	r2, r3, #31
 80003d8:	4907      	ldr	r1, [pc, #28]	; (80003f8 <__NVIC_EnableIRQ+0x38>)
 80003da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003de:	095b      	lsrs	r3, r3, #5
 80003e0:	2001      	movs	r0, #1
 80003e2:	fa00 f202 	lsl.w	r2, r0, r2
 80003e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80003ea:	bf00      	nop
 80003ec:	370c      	adds	r7, #12
 80003ee:	46bd      	mov	sp, r7
 80003f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f4:	4770      	bx	lr
 80003f6:	bf00      	nop
 80003f8:	e000e100 	.word	0xe000e100

080003fc <__NVIC_SetPriority>:
{
 80003fc:	b480      	push	{r7}
 80003fe:	b083      	sub	sp, #12
 8000400:	af00      	add	r7, sp, #0
 8000402:	4603      	mov	r3, r0
 8000404:	6039      	str	r1, [r7, #0]
 8000406:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000408:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800040c:	2b00      	cmp	r3, #0
 800040e:	db0a      	blt.n	8000426 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000410:	683b      	ldr	r3, [r7, #0]
 8000412:	b2da      	uxtb	r2, r3
 8000414:	490c      	ldr	r1, [pc, #48]	; (8000448 <__NVIC_SetPriority+0x4c>)
 8000416:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800041a:	0112      	lsls	r2, r2, #4
 800041c:	b2d2      	uxtb	r2, r2
 800041e:	440b      	add	r3, r1
 8000420:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8000424:	e00a      	b.n	800043c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000426:	683b      	ldr	r3, [r7, #0]
 8000428:	b2da      	uxtb	r2, r3
 800042a:	4908      	ldr	r1, [pc, #32]	; (800044c <__NVIC_SetPriority+0x50>)
 800042c:	79fb      	ldrb	r3, [r7, #7]
 800042e:	f003 030f 	and.w	r3, r3, #15
 8000432:	3b04      	subs	r3, #4
 8000434:	0112      	lsls	r2, r2, #4
 8000436:	b2d2      	uxtb	r2, r2
 8000438:	440b      	add	r3, r1
 800043a:	761a      	strb	r2, [r3, #24]
}
 800043c:	bf00      	nop
 800043e:	370c      	adds	r7, #12
 8000440:	46bd      	mov	sp, r7
 8000442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000446:	4770      	bx	lr
 8000448:	e000e100 	.word	0xe000e100
 800044c:	e000ed00 	.word	0xe000ed00

08000450 <SysTick_Config>:
{
 8000450:	b580      	push	{r7, lr}
 8000452:	b082      	sub	sp, #8
 8000454:	af00      	add	r7, sp, #0
 8000456:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	3b01      	subs	r3, #1
 800045c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000460:	d301      	bcc.n	8000466 <SysTick_Config+0x16>
    return (1UL);                                                   /* Reload value impossible */
 8000462:	2301      	movs	r3, #1
 8000464:	e00f      	b.n	8000486 <SysTick_Config+0x36>
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000466:	4a0a      	ldr	r2, [pc, #40]	; (8000490 <SysTick_Config+0x40>)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	3b01      	subs	r3, #1
 800046c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800046e:	210f      	movs	r1, #15
 8000470:	f04f 30ff 	mov.w	r0, #4294967295
 8000474:	f7ff ffc2 	bl	80003fc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000478:	4b05      	ldr	r3, [pc, #20]	; (8000490 <SysTick_Config+0x40>)
 800047a:	2200      	movs	r2, #0
 800047c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800047e:	4b04      	ldr	r3, [pc, #16]	; (8000490 <SysTick_Config+0x40>)
 8000480:	2207      	movs	r2, #7
 8000482:	601a      	str	r2, [r3, #0]
  return (0UL);                                                     /* Function successful */
 8000484:	2300      	movs	r3, #0
}
 8000486:	4618      	mov	r0, r3
 8000488:	3708      	adds	r7, #8
 800048a:	46bd      	mov	sp, r7
 800048c:	bd80      	pop	{r7, pc}
 800048e:	bf00      	nop
 8000490:	e000e010 	.word	0xe000e010

08000494 <SysTick_Handler>:

#define GET_INPUT_STATE() READ_BIT(GPIOA->IDR,GPIO_IDR_ID0)

static volatile uint32_t gMsTicks = 0;

void SysTick_Handler() {
 8000494:	b480      	push	{r7}
 8000496:	af00      	add	r7, sp, #0
	if (GET_INPUT_STATE() == true)
 8000498:	4b0e      	ldr	r3, [pc, #56]	; (80004d4 <SysTick_Handler+0x40>)
 800049a:	691b      	ldr	r3, [r3, #16]
 800049c:	f003 0301 	and.w	r3, r3, #1
 80004a0:	2b01      	cmp	r3, #1
 80004a2:	d106      	bne.n	80004b2 <SysTick_Handler+0x1e>
		ENABLE_OUTPUT();
 80004a4:	4b0c      	ldr	r3, [pc, #48]	; (80004d8 <SysTick_Handler+0x44>)
 80004a6:	695b      	ldr	r3, [r3, #20]
 80004a8:	4a0b      	ldr	r2, [pc, #44]	; (80004d8 <SysTick_Handler+0x44>)
 80004aa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80004ae:	6153      	str	r3, [r2, #20]
 80004b0:	e005      	b.n	80004be <SysTick_Handler+0x2a>
	else
		DISABLE_OUTPUT();
 80004b2:	4b09      	ldr	r3, [pc, #36]	; (80004d8 <SysTick_Handler+0x44>)
 80004b4:	695b      	ldr	r3, [r3, #20]
 80004b6:	4a08      	ldr	r2, [pc, #32]	; (80004d8 <SysTick_Handler+0x44>)
 80004b8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80004bc:	6153      	str	r3, [r2, #20]
	gMsTicks++;
 80004be:	4b07      	ldr	r3, [pc, #28]	; (80004dc <SysTick_Handler+0x48>)
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	3301      	adds	r3, #1
 80004c4:	4a05      	ldr	r2, [pc, #20]	; (80004dc <SysTick_Handler+0x48>)
 80004c6:	6013      	str	r3, [r2, #0]
}
 80004c8:	bf00      	nop
 80004ca:	46bd      	mov	sp, r7
 80004cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d0:	4770      	bx	lr
 80004d2:	bf00      	nop
 80004d4:	40020000 	.word	0x40020000
 80004d8:	40020c00 	.word	0x40020c00
 80004dc:	20000080 	.word	0x20000080

080004e0 <ConfigureOutputGpio>:

void TIM1_UP_IRQHandler(void) {                 // Timer Interrupt Handler
}

static void ConfigureOutputGpio(void) {
 80004e0:	b480      	push	{r7}
 80004e2:	af00      	add	r7, sp, #0
	// Enable GPIOD port clock
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIODEN);
 80004e4:	4b09      	ldr	r3, [pc, #36]	; (800050c <ConfigureOutputGpio+0x2c>)
 80004e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e8:	4a08      	ldr	r2, [pc, #32]	; (800050c <ConfigureOutputGpio+0x2c>)
 80004ea:	f043 0308 	orr.w	r3, r3, #8
 80004ee:	6313      	str	r3, [r2, #48]	; 0x30

	// Set PD12 to output mode
	MODIFY_REG(GPIOD->MODER, GPIO_MODER_MODE12, _VAL2FLD(GPIO_MODER_MODE12,1));
 80004f0:	4b07      	ldr	r3, [pc, #28]	; (8000510 <ConfigureOutputGpio+0x30>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80004f8:	4a05      	ldr	r2, [pc, #20]	; (8000510 <ConfigureOutputGpio+0x30>)
 80004fa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80004fe:	6013      	str	r3, [r2, #0]
}
 8000500:	bf00      	nop
 8000502:	46bd      	mov	sp, r7
 8000504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000508:	4770      	bx	lr
 800050a:	bf00      	nop
 800050c:	40023800 	.word	0x40023800
 8000510:	40020c00 	.word	0x40020c00

08000514 <ConfigureInputGpio>:

static void ConfigureInputGpio(void) {
 8000514:	b480      	push	{r7}
 8000516:	af00      	add	r7, sp, #0

	// Enable GPIOA port clock
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOAEN);
 8000518:	4b08      	ldr	r3, [pc, #32]	; (800053c <ConfigureInputGpio+0x28>)
 800051a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800051c:	4a07      	ldr	r2, [pc, #28]	; (800053c <ConfigureInputGpio+0x28>)
 800051e:	f043 0301 	orr.w	r3, r3, #1
 8000522:	6313      	str	r3, [r2, #48]	; 0x30

	// Set PD12 to output mode
	MODIFY_REG(GPIOA->MODER, GPIO_MODER_MODE0, _VAL2FLD(GPIO_MODER_MODE0,0));
 8000524:	4b06      	ldr	r3, [pc, #24]	; (8000540 <ConfigureInputGpio+0x2c>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	4a05      	ldr	r2, [pc, #20]	; (8000540 <ConfigureInputGpio+0x2c>)
 800052a:	f023 0303 	bic.w	r3, r3, #3
 800052e:	6013      	str	r3, [r2, #0]
}
 8000530:	bf00      	nop
 8000532:	46bd      	mov	sp, r7
 8000534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000538:	4770      	bx	lr
 800053a:	bf00      	nop
 800053c:	40023800 	.word	0x40023800
 8000540:	40020000 	.word	0x40020000

08000544 <main>:

int main(void) {
 8000544:	b580      	push	{r7, lr}
 8000546:	af00      	add	r7, sp, #0

	log_info("program entry point %d\n", 123);
 8000548:	217b      	movs	r1, #123	; 0x7b
 800054a:	480c      	ldr	r0, [pc, #48]	; (800057c <main+0x38>)
 800054c:	f7ff ff24 	bl	8000398 <log_info>

	ConfigureOutputGpio();
 8000550:	f7ff ffc6 	bl	80004e0 <ConfigureOutputGpio>
	ConfigureInputGpio();
 8000554:	f7ff ffde 	bl	8000514 <ConfigureInputGpio>

	SysTick_Config(SystemCoreClock / 72000);
 8000558:	4b09      	ldr	r3, [pc, #36]	; (8000580 <main+0x3c>)
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a09      	ldr	r2, [pc, #36]	; (8000584 <main+0x40>)
 800055e:	fba2 2303 	umull	r2, r3, r2, r3
 8000562:	0c1b      	lsrs	r3, r3, #16
 8000564:	4618      	mov	r0, r3
 8000566:	f7ff ff73 	bl	8000450 <SysTick_Config>
	NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 1);            // Set Timer priority
 800056a:	2101      	movs	r1, #1
 800056c:	2019      	movs	r0, #25
 800056e:	f7ff ff45 	bl	80003fc <__NVIC_SetPriority>
	NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);                 // Enable Timer Interrupt
 8000572:	2019      	movs	r0, #25
 8000574:	f7ff ff24 	bl	80003c0 <__NVIC_EnableIRQ>

	/* Loop forever */
	for (;;) {
 8000578:	e7fe      	b.n	8000578 <main+0x34>
 800057a:	bf00      	nop
 800057c:	08001640 	.word	0x08001640
 8000580:	20000000 	.word	0x20000000
 8000584:	e90452d5 	.word	0xe90452d5

08000588 <ConfigureClock>:
 * 	/Q => /3
 * 	AHB => /1
 * 	APB1 => /2
 * 	APB2 => /2
 */
static void ConfigureClock(void) {
 8000588:	b480      	push	{r7}
 800058a:	af00      	add	r7, sp, #0

	// flash read latency
	MODIFY_REG(FLASH->ACR,
 800058c:	4b25      	ldr	r3, [pc, #148]	; (8000624 <ConfigureClock+0x9c>)
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	f023 0307 	bic.w	r3, r3, #7
 8000594:	4a23      	ldr	r2, [pc, #140]	; (8000624 <ConfigureClock+0x9c>)
 8000596:	f043 0302 	orr.w	r3, r3, #2
 800059a:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY,
			_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));

	// Turn on HSE
	SET_BIT(RCC->CR,RCC_CR_HSEON);
 800059c:	4b22      	ldr	r3, [pc, #136]	; (8000628 <ConfigureClock+0xa0>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	4a21      	ldr	r2, [pc, #132]	; (8000628 <ConfigureClock+0xa0>)
 80005a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80005a6:	6013      	str	r3, [r2, #0]

	// wait until HSE is stable
	while(!READ_BIT(RCC->CR,RCC_CR_HSERDY));
 80005a8:	bf00      	nop
 80005aa:	4b1f      	ldr	r3, [pc, #124]	; (8000628 <ConfigureClock+0xa0>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80005b2:	2b00      	cmp	r3, #0
 80005b4:	d0f9      	beq.n	80005aa <ConfigureClock+0x22>

	// configure PLL
	MODIFY_REG(RCC->PLLCFGR,
 80005b6:	4b1c      	ldr	r3, [pc, #112]	; (8000628 <ConfigureClock+0xa0>)
 80005b8:	685b      	ldr	r3, [r3, #4]
 80005ba:	4a1c      	ldr	r2, [pc, #112]	; (800062c <ConfigureClock+0xa4>)
 80005bc:	401a      	ands	r2, r3
 80005be:	491a      	ldr	r1, [pc, #104]	; (8000628 <ConfigureClock+0xa0>)
 80005c0:	4b1b      	ldr	r3, [pc, #108]	; (8000630 <ConfigureClock+0xa8>)
 80005c2:	4313      	orrs	r3, r2
 80005c4:	604b      	str	r3, [r1, #4]
			_VAL2FLD(RCC_PLLCFGR_PLLP,0)|
			_VAL2FLD(RCC_PLLCFGR_PLLQ,3)|
			_VAL2FLD(RCC_PLLCFGR_PLLSRC,1));

	// enable PLL
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 80005c6:	4b18      	ldr	r3, [pc, #96]	; (8000628 <ConfigureClock+0xa0>)
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	4a17      	ldr	r2, [pc, #92]	; (8000628 <ConfigureClock+0xa0>)
 80005cc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80005d0:	6013      	str	r3, [r2, #0]

	// wait until PLL is stable
	while(!READ_BIT(RCC->CR,RCC_CR_PLLRDY));
 80005d2:	bf00      	nop
 80005d4:	4b14      	ldr	r3, [pc, #80]	; (8000628 <ConfigureClock+0xa0>)
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80005dc:	2b00      	cmp	r3, #0
 80005de:	d0f9      	beq.n	80005d4 <ConfigureClock+0x4c>

	// set AHB,APB1 and APB2 dividers.
	MODIFY_REG(RCC->CFGR,
 80005e0:	4b11      	ldr	r3, [pc, #68]	; (8000628 <ConfigureClock+0xa0>)
 80005e2:	689b      	ldr	r3, [r3, #8]
 80005e4:	4a10      	ldr	r2, [pc, #64]	; (8000628 <ConfigureClock+0xa0>)
 80005e6:	f423 437c 	bic.w	r3, r3, #64512	; 0xfc00
 80005ea:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80005ee:	6093      	str	r3, [r2, #8]
			_VAL2FLD(RCC_CFGR_HPRE,RCC_CFGR_HPRE_DIV1)|
			_VAL2FLD(RCC_CFGR_PPRE1,RCC_CFGR_PPRE1_DIV2)|
			_VAL2FLD(RCC_CFGR_PPRE2,RCC_CFGR_PPRE2_DIV2)
			);
	// switch clock to HSE
	MODIFY_REG(RCC->CFGR,RCC_CFGR_SW,_VAL2FLD(RCC_CFGR_SW,RCC_CFGR_SW_PLL));
 80005f0:	4b0d      	ldr	r3, [pc, #52]	; (8000628 <ConfigureClock+0xa0>)
 80005f2:	689b      	ldr	r3, [r3, #8]
 80005f4:	f023 0303 	bic.w	r3, r3, #3
 80005f8:	4a0b      	ldr	r2, [pc, #44]	; (8000628 <ConfigureClock+0xa0>)
 80005fa:	f043 0302 	orr.w	r3, r3, #2
 80005fe:	6093      	str	r3, [r2, #8]

	// wait until PLL is stable
	while(READ_BIT(RCC->CFGR,RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL);
 8000600:	bf00      	nop
 8000602:	4b09      	ldr	r3, [pc, #36]	; (8000628 <ConfigureClock+0xa0>)
 8000604:	689b      	ldr	r3, [r3, #8]
 8000606:	f003 030c 	and.w	r3, r3, #12
 800060a:	2b08      	cmp	r3, #8
 800060c:	d1f9      	bne.n	8000602 <ConfigureClock+0x7a>

	// Disable HSI
	CLEAR_BIT(RCC->CR,RCC_CR_HSION);
 800060e:	4b06      	ldr	r3, [pc, #24]	; (8000628 <ConfigureClock+0xa0>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a05      	ldr	r2, [pc, #20]	; (8000628 <ConfigureClock+0xa0>)
 8000614:	f023 0301 	bic.w	r3, r3, #1
 8000618:	6013      	str	r3, [r2, #0]
}
 800061a:	bf00      	nop
 800061c:	46bd      	mov	sp, r7
 800061e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000622:	4770      	bx	lr
 8000624:	40023c00 	.word	0x40023c00
 8000628:	40023800 	.word	0x40023800
 800062c:	f0bc8000 	.word	0xf0bc8000
 8000630:	03401204 	.word	0x03401204

08000634 <SystemInit>:
//			GPIO_AFRH_AF,
//			_VAL2FLD(GPIO_AFRH_AFRH8,0));

}

void SystemInit(void) {
 8000634:	b580      	push	{r7, lr}
 8000636:	af00      	add	r7, sp, #0

//	EnableMC01();
//	ConfigureMC01_Gpio();
	ConfigureClock();
 8000638:	f7ff ffa6 	bl	8000588 <ConfigureClock>

}
 800063c:	bf00      	nop
 800063e:	bd80      	pop	{r7, pc}

08000640 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000640:	480d      	ldr	r0, [pc, #52]	; (8000678 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000642:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000644:	f7ff fff6 	bl	8000634 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000648:	480c      	ldr	r0, [pc, #48]	; (800067c <LoopForever+0x6>)
  ldr r1, =_edata
 800064a:	490d      	ldr	r1, [pc, #52]	; (8000680 <LoopForever+0xa>)
  ldr r2, =_sidata
 800064c:	4a0d      	ldr	r2, [pc, #52]	; (8000684 <LoopForever+0xe>)
  movs r3, #0
 800064e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000650:	e002      	b.n	8000658 <LoopCopyDataInit>

08000652 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000652:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000654:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000656:	3304      	adds	r3, #4

08000658 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000658:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800065a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800065c:	d3f9      	bcc.n	8000652 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800065e:	4a0a      	ldr	r2, [pc, #40]	; (8000688 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000660:	4c0a      	ldr	r4, [pc, #40]	; (800068c <LoopForever+0x16>)
  movs r3, #0
 8000662:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000664:	e001      	b.n	800066a <LoopFillZerobss>

08000666 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000666:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000668:	3204      	adds	r2, #4

0800066a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800066a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800066c:	d3fb      	bcc.n	8000666 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800066e:	f000 fcef 	bl	8001050 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000672:	f7ff ff67 	bl	8000544 <main>

08000676 <LoopForever>:

LoopForever:
  b LoopForever
 8000676:	e7fe      	b.n	8000676 <LoopForever>
  ldr   r0, =_estack
 8000678:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800067c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000680:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000684:	08001694 	.word	0x08001694
  ldr r2, =_sbss
 8000688:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800068c:	200001d4 	.word	0x200001d4

08000690 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000690:	e7fe      	b.n	8000690 <ADC_IRQHandler>

08000692 <__sfputc_r>:
 8000692:	6893      	ldr	r3, [r2, #8]
 8000694:	3b01      	subs	r3, #1
 8000696:	2b00      	cmp	r3, #0
 8000698:	b410      	push	{r4}
 800069a:	6093      	str	r3, [r2, #8]
 800069c:	da08      	bge.n	80006b0 <__sfputc_r+0x1e>
 800069e:	6994      	ldr	r4, [r2, #24]
 80006a0:	42a3      	cmp	r3, r4
 80006a2:	db01      	blt.n	80006a8 <__sfputc_r+0x16>
 80006a4:	290a      	cmp	r1, #10
 80006a6:	d103      	bne.n	80006b0 <__sfputc_r+0x1e>
 80006a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006ac:	f000 bbed 	b.w	8000e8a <__swbuf_r>
 80006b0:	6813      	ldr	r3, [r2, #0]
 80006b2:	1c58      	adds	r0, r3, #1
 80006b4:	6010      	str	r0, [r2, #0]
 80006b6:	7019      	strb	r1, [r3, #0]
 80006b8:	4608      	mov	r0, r1
 80006ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80006be:	4770      	bx	lr

080006c0 <__sfputs_r>:
 80006c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006c2:	4606      	mov	r6, r0
 80006c4:	460f      	mov	r7, r1
 80006c6:	4614      	mov	r4, r2
 80006c8:	18d5      	adds	r5, r2, r3
 80006ca:	42ac      	cmp	r4, r5
 80006cc:	d101      	bne.n	80006d2 <__sfputs_r+0x12>
 80006ce:	2000      	movs	r0, #0
 80006d0:	e007      	b.n	80006e2 <__sfputs_r+0x22>
 80006d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006d6:	463a      	mov	r2, r7
 80006d8:	4630      	mov	r0, r6
 80006da:	f7ff ffda 	bl	8000692 <__sfputc_r>
 80006de:	1c43      	adds	r3, r0, #1
 80006e0:	d1f3      	bne.n	80006ca <__sfputs_r+0xa>
 80006e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080006e4 <_vfiprintf_r>:
 80006e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006e8:	460d      	mov	r5, r1
 80006ea:	b09d      	sub	sp, #116	; 0x74
 80006ec:	4614      	mov	r4, r2
 80006ee:	4698      	mov	r8, r3
 80006f0:	4606      	mov	r6, r0
 80006f2:	b118      	cbz	r0, 80006fc <_vfiprintf_r+0x18>
 80006f4:	6a03      	ldr	r3, [r0, #32]
 80006f6:	b90b      	cbnz	r3, 80006fc <_vfiprintf_r+0x18>
 80006f8:	f000 fb34 	bl	8000d64 <__sinit>
 80006fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80006fe:	07d9      	lsls	r1, r3, #31
 8000700:	d405      	bmi.n	800070e <_vfiprintf_r+0x2a>
 8000702:	89ab      	ldrh	r3, [r5, #12]
 8000704:	059a      	lsls	r2, r3, #22
 8000706:	d402      	bmi.n	800070e <_vfiprintf_r+0x2a>
 8000708:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800070a:	f000 fcc6 	bl	800109a <__retarget_lock_acquire_recursive>
 800070e:	89ab      	ldrh	r3, [r5, #12]
 8000710:	071b      	lsls	r3, r3, #28
 8000712:	d501      	bpl.n	8000718 <_vfiprintf_r+0x34>
 8000714:	692b      	ldr	r3, [r5, #16]
 8000716:	b99b      	cbnz	r3, 8000740 <_vfiprintf_r+0x5c>
 8000718:	4629      	mov	r1, r5
 800071a:	4630      	mov	r0, r6
 800071c:	f000 fbf2 	bl	8000f04 <__swsetup_r>
 8000720:	b170      	cbz	r0, 8000740 <_vfiprintf_r+0x5c>
 8000722:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000724:	07dc      	lsls	r4, r3, #31
 8000726:	d504      	bpl.n	8000732 <_vfiprintf_r+0x4e>
 8000728:	f04f 30ff 	mov.w	r0, #4294967295
 800072c:	b01d      	add	sp, #116	; 0x74
 800072e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000732:	89ab      	ldrh	r3, [r5, #12]
 8000734:	0598      	lsls	r0, r3, #22
 8000736:	d4f7      	bmi.n	8000728 <_vfiprintf_r+0x44>
 8000738:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800073a:	f000 fcaf 	bl	800109c <__retarget_lock_release_recursive>
 800073e:	e7f3      	b.n	8000728 <_vfiprintf_r+0x44>
 8000740:	2300      	movs	r3, #0
 8000742:	9309      	str	r3, [sp, #36]	; 0x24
 8000744:	2320      	movs	r3, #32
 8000746:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800074a:	f8cd 800c 	str.w	r8, [sp, #12]
 800074e:	2330      	movs	r3, #48	; 0x30
 8000750:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000904 <_vfiprintf_r+0x220>
 8000754:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000758:	f04f 0901 	mov.w	r9, #1
 800075c:	4623      	mov	r3, r4
 800075e:	469a      	mov	sl, r3
 8000760:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000764:	b10a      	cbz	r2, 800076a <_vfiprintf_r+0x86>
 8000766:	2a25      	cmp	r2, #37	; 0x25
 8000768:	d1f9      	bne.n	800075e <_vfiprintf_r+0x7a>
 800076a:	ebba 0b04 	subs.w	fp, sl, r4
 800076e:	d00b      	beq.n	8000788 <_vfiprintf_r+0xa4>
 8000770:	465b      	mov	r3, fp
 8000772:	4622      	mov	r2, r4
 8000774:	4629      	mov	r1, r5
 8000776:	4630      	mov	r0, r6
 8000778:	f7ff ffa2 	bl	80006c0 <__sfputs_r>
 800077c:	3001      	adds	r0, #1
 800077e:	f000 80a9 	beq.w	80008d4 <_vfiprintf_r+0x1f0>
 8000782:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000784:	445a      	add	r2, fp
 8000786:	9209      	str	r2, [sp, #36]	; 0x24
 8000788:	f89a 3000 	ldrb.w	r3, [sl]
 800078c:	2b00      	cmp	r3, #0
 800078e:	f000 80a1 	beq.w	80008d4 <_vfiprintf_r+0x1f0>
 8000792:	2300      	movs	r3, #0
 8000794:	f04f 32ff 	mov.w	r2, #4294967295
 8000798:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800079c:	f10a 0a01 	add.w	sl, sl, #1
 80007a0:	9304      	str	r3, [sp, #16]
 80007a2:	9307      	str	r3, [sp, #28]
 80007a4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80007a8:	931a      	str	r3, [sp, #104]	; 0x68
 80007aa:	4654      	mov	r4, sl
 80007ac:	2205      	movs	r2, #5
 80007ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007b2:	4854      	ldr	r0, [pc, #336]	; (8000904 <_vfiprintf_r+0x220>)
 80007b4:	f7ff fd0c 	bl	80001d0 <memchr>
 80007b8:	9a04      	ldr	r2, [sp, #16]
 80007ba:	b9d8      	cbnz	r0, 80007f4 <_vfiprintf_r+0x110>
 80007bc:	06d1      	lsls	r1, r2, #27
 80007be:	bf44      	itt	mi
 80007c0:	2320      	movmi	r3, #32
 80007c2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007c6:	0713      	lsls	r3, r2, #28
 80007c8:	bf44      	itt	mi
 80007ca:	232b      	movmi	r3, #43	; 0x2b
 80007cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007d0:	f89a 3000 	ldrb.w	r3, [sl]
 80007d4:	2b2a      	cmp	r3, #42	; 0x2a
 80007d6:	d015      	beq.n	8000804 <_vfiprintf_r+0x120>
 80007d8:	9a07      	ldr	r2, [sp, #28]
 80007da:	4654      	mov	r4, sl
 80007dc:	2000      	movs	r0, #0
 80007de:	f04f 0c0a 	mov.w	ip, #10
 80007e2:	4621      	mov	r1, r4
 80007e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80007e8:	3b30      	subs	r3, #48	; 0x30
 80007ea:	2b09      	cmp	r3, #9
 80007ec:	d94d      	bls.n	800088a <_vfiprintf_r+0x1a6>
 80007ee:	b1b0      	cbz	r0, 800081e <_vfiprintf_r+0x13a>
 80007f0:	9207      	str	r2, [sp, #28]
 80007f2:	e014      	b.n	800081e <_vfiprintf_r+0x13a>
 80007f4:	eba0 0308 	sub.w	r3, r0, r8
 80007f8:	fa09 f303 	lsl.w	r3, r9, r3
 80007fc:	4313      	orrs	r3, r2
 80007fe:	9304      	str	r3, [sp, #16]
 8000800:	46a2      	mov	sl, r4
 8000802:	e7d2      	b.n	80007aa <_vfiprintf_r+0xc6>
 8000804:	9b03      	ldr	r3, [sp, #12]
 8000806:	1d19      	adds	r1, r3, #4
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	9103      	str	r1, [sp, #12]
 800080c:	2b00      	cmp	r3, #0
 800080e:	bfbb      	ittet	lt
 8000810:	425b      	neglt	r3, r3
 8000812:	f042 0202 	orrlt.w	r2, r2, #2
 8000816:	9307      	strge	r3, [sp, #28]
 8000818:	9307      	strlt	r3, [sp, #28]
 800081a:	bfb8      	it	lt
 800081c:	9204      	strlt	r2, [sp, #16]
 800081e:	7823      	ldrb	r3, [r4, #0]
 8000820:	2b2e      	cmp	r3, #46	; 0x2e
 8000822:	d10c      	bne.n	800083e <_vfiprintf_r+0x15a>
 8000824:	7863      	ldrb	r3, [r4, #1]
 8000826:	2b2a      	cmp	r3, #42	; 0x2a
 8000828:	d134      	bne.n	8000894 <_vfiprintf_r+0x1b0>
 800082a:	9b03      	ldr	r3, [sp, #12]
 800082c:	1d1a      	adds	r2, r3, #4
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	9203      	str	r2, [sp, #12]
 8000832:	2b00      	cmp	r3, #0
 8000834:	bfb8      	it	lt
 8000836:	f04f 33ff 	movlt.w	r3, #4294967295
 800083a:	3402      	adds	r4, #2
 800083c:	9305      	str	r3, [sp, #20]
 800083e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000914 <_vfiprintf_r+0x230>
 8000842:	7821      	ldrb	r1, [r4, #0]
 8000844:	2203      	movs	r2, #3
 8000846:	4650      	mov	r0, sl
 8000848:	f7ff fcc2 	bl	80001d0 <memchr>
 800084c:	b138      	cbz	r0, 800085e <_vfiprintf_r+0x17a>
 800084e:	9b04      	ldr	r3, [sp, #16]
 8000850:	eba0 000a 	sub.w	r0, r0, sl
 8000854:	2240      	movs	r2, #64	; 0x40
 8000856:	4082      	lsls	r2, r0
 8000858:	4313      	orrs	r3, r2
 800085a:	3401      	adds	r4, #1
 800085c:	9304      	str	r3, [sp, #16]
 800085e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000862:	4829      	ldr	r0, [pc, #164]	; (8000908 <_vfiprintf_r+0x224>)
 8000864:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000868:	2206      	movs	r2, #6
 800086a:	f7ff fcb1 	bl	80001d0 <memchr>
 800086e:	2800      	cmp	r0, #0
 8000870:	d03f      	beq.n	80008f2 <_vfiprintf_r+0x20e>
 8000872:	4b26      	ldr	r3, [pc, #152]	; (800090c <_vfiprintf_r+0x228>)
 8000874:	bb1b      	cbnz	r3, 80008be <_vfiprintf_r+0x1da>
 8000876:	9b03      	ldr	r3, [sp, #12]
 8000878:	3307      	adds	r3, #7
 800087a:	f023 0307 	bic.w	r3, r3, #7
 800087e:	3308      	adds	r3, #8
 8000880:	9303      	str	r3, [sp, #12]
 8000882:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000884:	443b      	add	r3, r7
 8000886:	9309      	str	r3, [sp, #36]	; 0x24
 8000888:	e768      	b.n	800075c <_vfiprintf_r+0x78>
 800088a:	fb0c 3202 	mla	r2, ip, r2, r3
 800088e:	460c      	mov	r4, r1
 8000890:	2001      	movs	r0, #1
 8000892:	e7a6      	b.n	80007e2 <_vfiprintf_r+0xfe>
 8000894:	2300      	movs	r3, #0
 8000896:	3401      	adds	r4, #1
 8000898:	9305      	str	r3, [sp, #20]
 800089a:	4619      	mov	r1, r3
 800089c:	f04f 0c0a 	mov.w	ip, #10
 80008a0:	4620      	mov	r0, r4
 80008a2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80008a6:	3a30      	subs	r2, #48	; 0x30
 80008a8:	2a09      	cmp	r2, #9
 80008aa:	d903      	bls.n	80008b4 <_vfiprintf_r+0x1d0>
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	d0c6      	beq.n	800083e <_vfiprintf_r+0x15a>
 80008b0:	9105      	str	r1, [sp, #20]
 80008b2:	e7c4      	b.n	800083e <_vfiprintf_r+0x15a>
 80008b4:	fb0c 2101 	mla	r1, ip, r1, r2
 80008b8:	4604      	mov	r4, r0
 80008ba:	2301      	movs	r3, #1
 80008bc:	e7f0      	b.n	80008a0 <_vfiprintf_r+0x1bc>
 80008be:	ab03      	add	r3, sp, #12
 80008c0:	9300      	str	r3, [sp, #0]
 80008c2:	462a      	mov	r2, r5
 80008c4:	4b12      	ldr	r3, [pc, #72]	; (8000910 <_vfiprintf_r+0x22c>)
 80008c6:	a904      	add	r1, sp, #16
 80008c8:	4630      	mov	r0, r6
 80008ca:	f3af 8000 	nop.w
 80008ce:	4607      	mov	r7, r0
 80008d0:	1c78      	adds	r0, r7, #1
 80008d2:	d1d6      	bne.n	8000882 <_vfiprintf_r+0x19e>
 80008d4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008d6:	07d9      	lsls	r1, r3, #31
 80008d8:	d405      	bmi.n	80008e6 <_vfiprintf_r+0x202>
 80008da:	89ab      	ldrh	r3, [r5, #12]
 80008dc:	059a      	lsls	r2, r3, #22
 80008de:	d402      	bmi.n	80008e6 <_vfiprintf_r+0x202>
 80008e0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008e2:	f000 fbdb 	bl	800109c <__retarget_lock_release_recursive>
 80008e6:	89ab      	ldrh	r3, [r5, #12]
 80008e8:	065b      	lsls	r3, r3, #25
 80008ea:	f53f af1d 	bmi.w	8000728 <_vfiprintf_r+0x44>
 80008ee:	9809      	ldr	r0, [sp, #36]	; 0x24
 80008f0:	e71c      	b.n	800072c <_vfiprintf_r+0x48>
 80008f2:	ab03      	add	r3, sp, #12
 80008f4:	9300      	str	r3, [sp, #0]
 80008f6:	462a      	mov	r2, r5
 80008f8:	4b05      	ldr	r3, [pc, #20]	; (8000910 <_vfiprintf_r+0x22c>)
 80008fa:	a904      	add	r1, sp, #16
 80008fc:	4630      	mov	r0, r6
 80008fe:	f000 f883 	bl	8000a08 <_printf_i>
 8000902:	e7e4      	b.n	80008ce <_vfiprintf_r+0x1ea>
 8000904:	08001658 	.word	0x08001658
 8000908:	08001662 	.word	0x08001662
 800090c:	00000000 	.word	0x00000000
 8000910:	080006c1 	.word	0x080006c1
 8000914:	0800165e 	.word	0x0800165e

08000918 <vfiprintf>:
 8000918:	4613      	mov	r3, r2
 800091a:	460a      	mov	r2, r1
 800091c:	4601      	mov	r1, r0
 800091e:	4802      	ldr	r0, [pc, #8]	; (8000928 <vfiprintf+0x10>)
 8000920:	6800      	ldr	r0, [r0, #0]
 8000922:	f7ff bedf 	b.w	80006e4 <_vfiprintf_r>
 8000926:	bf00      	nop
 8000928:	20000060 	.word	0x20000060

0800092c <_printf_common>:
 800092c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000930:	4616      	mov	r6, r2
 8000932:	4699      	mov	r9, r3
 8000934:	688a      	ldr	r2, [r1, #8]
 8000936:	690b      	ldr	r3, [r1, #16]
 8000938:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800093c:	4293      	cmp	r3, r2
 800093e:	bfb8      	it	lt
 8000940:	4613      	movlt	r3, r2
 8000942:	6033      	str	r3, [r6, #0]
 8000944:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000948:	4607      	mov	r7, r0
 800094a:	460c      	mov	r4, r1
 800094c:	b10a      	cbz	r2, 8000952 <_printf_common+0x26>
 800094e:	3301      	adds	r3, #1
 8000950:	6033      	str	r3, [r6, #0]
 8000952:	6823      	ldr	r3, [r4, #0]
 8000954:	0699      	lsls	r1, r3, #26
 8000956:	bf42      	ittt	mi
 8000958:	6833      	ldrmi	r3, [r6, #0]
 800095a:	3302      	addmi	r3, #2
 800095c:	6033      	strmi	r3, [r6, #0]
 800095e:	6825      	ldr	r5, [r4, #0]
 8000960:	f015 0506 	ands.w	r5, r5, #6
 8000964:	d106      	bne.n	8000974 <_printf_common+0x48>
 8000966:	f104 0a19 	add.w	sl, r4, #25
 800096a:	68e3      	ldr	r3, [r4, #12]
 800096c:	6832      	ldr	r2, [r6, #0]
 800096e:	1a9b      	subs	r3, r3, r2
 8000970:	42ab      	cmp	r3, r5
 8000972:	dc26      	bgt.n	80009c2 <_printf_common+0x96>
 8000974:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000978:	1e13      	subs	r3, r2, #0
 800097a:	6822      	ldr	r2, [r4, #0]
 800097c:	bf18      	it	ne
 800097e:	2301      	movne	r3, #1
 8000980:	0692      	lsls	r2, r2, #26
 8000982:	d42b      	bmi.n	80009dc <_printf_common+0xb0>
 8000984:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000988:	4649      	mov	r1, r9
 800098a:	4638      	mov	r0, r7
 800098c:	47c0      	blx	r8
 800098e:	3001      	adds	r0, #1
 8000990:	d01e      	beq.n	80009d0 <_printf_common+0xa4>
 8000992:	6823      	ldr	r3, [r4, #0]
 8000994:	6922      	ldr	r2, [r4, #16]
 8000996:	f003 0306 	and.w	r3, r3, #6
 800099a:	2b04      	cmp	r3, #4
 800099c:	bf02      	ittt	eq
 800099e:	68e5      	ldreq	r5, [r4, #12]
 80009a0:	6833      	ldreq	r3, [r6, #0]
 80009a2:	1aed      	subeq	r5, r5, r3
 80009a4:	68a3      	ldr	r3, [r4, #8]
 80009a6:	bf0c      	ite	eq
 80009a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80009ac:	2500      	movne	r5, #0
 80009ae:	4293      	cmp	r3, r2
 80009b0:	bfc4      	itt	gt
 80009b2:	1a9b      	subgt	r3, r3, r2
 80009b4:	18ed      	addgt	r5, r5, r3
 80009b6:	2600      	movs	r6, #0
 80009b8:	341a      	adds	r4, #26
 80009ba:	42b5      	cmp	r5, r6
 80009bc:	d11a      	bne.n	80009f4 <_printf_common+0xc8>
 80009be:	2000      	movs	r0, #0
 80009c0:	e008      	b.n	80009d4 <_printf_common+0xa8>
 80009c2:	2301      	movs	r3, #1
 80009c4:	4652      	mov	r2, sl
 80009c6:	4649      	mov	r1, r9
 80009c8:	4638      	mov	r0, r7
 80009ca:	47c0      	blx	r8
 80009cc:	3001      	adds	r0, #1
 80009ce:	d103      	bne.n	80009d8 <_printf_common+0xac>
 80009d0:	f04f 30ff 	mov.w	r0, #4294967295
 80009d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009d8:	3501      	adds	r5, #1
 80009da:	e7c6      	b.n	800096a <_printf_common+0x3e>
 80009dc:	18e1      	adds	r1, r4, r3
 80009de:	1c5a      	adds	r2, r3, #1
 80009e0:	2030      	movs	r0, #48	; 0x30
 80009e2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80009e6:	4422      	add	r2, r4
 80009e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80009ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80009f0:	3302      	adds	r3, #2
 80009f2:	e7c7      	b.n	8000984 <_printf_common+0x58>
 80009f4:	2301      	movs	r3, #1
 80009f6:	4622      	mov	r2, r4
 80009f8:	4649      	mov	r1, r9
 80009fa:	4638      	mov	r0, r7
 80009fc:	47c0      	blx	r8
 80009fe:	3001      	adds	r0, #1
 8000a00:	d0e6      	beq.n	80009d0 <_printf_common+0xa4>
 8000a02:	3601      	adds	r6, #1
 8000a04:	e7d9      	b.n	80009ba <_printf_common+0x8e>
	...

08000a08 <_printf_i>:
 8000a08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000a0c:	7e0f      	ldrb	r7, [r1, #24]
 8000a0e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000a10:	2f78      	cmp	r7, #120	; 0x78
 8000a12:	4691      	mov	r9, r2
 8000a14:	4680      	mov	r8, r0
 8000a16:	460c      	mov	r4, r1
 8000a18:	469a      	mov	sl, r3
 8000a1a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000a1e:	d807      	bhi.n	8000a30 <_printf_i+0x28>
 8000a20:	2f62      	cmp	r7, #98	; 0x62
 8000a22:	d80a      	bhi.n	8000a3a <_printf_i+0x32>
 8000a24:	2f00      	cmp	r7, #0
 8000a26:	f000 80d4 	beq.w	8000bd2 <_printf_i+0x1ca>
 8000a2a:	2f58      	cmp	r7, #88	; 0x58
 8000a2c:	f000 80c0 	beq.w	8000bb0 <_printf_i+0x1a8>
 8000a30:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000a34:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000a38:	e03a      	b.n	8000ab0 <_printf_i+0xa8>
 8000a3a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000a3e:	2b15      	cmp	r3, #21
 8000a40:	d8f6      	bhi.n	8000a30 <_printf_i+0x28>
 8000a42:	a101      	add	r1, pc, #4	; (adr r1, 8000a48 <_printf_i+0x40>)
 8000a44:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000a48:	08000aa1 	.word	0x08000aa1
 8000a4c:	08000ab5 	.word	0x08000ab5
 8000a50:	08000a31 	.word	0x08000a31
 8000a54:	08000a31 	.word	0x08000a31
 8000a58:	08000a31 	.word	0x08000a31
 8000a5c:	08000a31 	.word	0x08000a31
 8000a60:	08000ab5 	.word	0x08000ab5
 8000a64:	08000a31 	.word	0x08000a31
 8000a68:	08000a31 	.word	0x08000a31
 8000a6c:	08000a31 	.word	0x08000a31
 8000a70:	08000a31 	.word	0x08000a31
 8000a74:	08000bb9 	.word	0x08000bb9
 8000a78:	08000ae1 	.word	0x08000ae1
 8000a7c:	08000b73 	.word	0x08000b73
 8000a80:	08000a31 	.word	0x08000a31
 8000a84:	08000a31 	.word	0x08000a31
 8000a88:	08000bdb 	.word	0x08000bdb
 8000a8c:	08000a31 	.word	0x08000a31
 8000a90:	08000ae1 	.word	0x08000ae1
 8000a94:	08000a31 	.word	0x08000a31
 8000a98:	08000a31 	.word	0x08000a31
 8000a9c:	08000b7b 	.word	0x08000b7b
 8000aa0:	682b      	ldr	r3, [r5, #0]
 8000aa2:	1d1a      	adds	r2, r3, #4
 8000aa4:	681b      	ldr	r3, [r3, #0]
 8000aa6:	602a      	str	r2, [r5, #0]
 8000aa8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000aac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ab0:	2301      	movs	r3, #1
 8000ab2:	e09f      	b.n	8000bf4 <_printf_i+0x1ec>
 8000ab4:	6820      	ldr	r0, [r4, #0]
 8000ab6:	682b      	ldr	r3, [r5, #0]
 8000ab8:	0607      	lsls	r7, r0, #24
 8000aba:	f103 0104 	add.w	r1, r3, #4
 8000abe:	6029      	str	r1, [r5, #0]
 8000ac0:	d501      	bpl.n	8000ac6 <_printf_i+0xbe>
 8000ac2:	681e      	ldr	r6, [r3, #0]
 8000ac4:	e003      	b.n	8000ace <_printf_i+0xc6>
 8000ac6:	0646      	lsls	r6, r0, #25
 8000ac8:	d5fb      	bpl.n	8000ac2 <_printf_i+0xba>
 8000aca:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000ace:	2e00      	cmp	r6, #0
 8000ad0:	da03      	bge.n	8000ada <_printf_i+0xd2>
 8000ad2:	232d      	movs	r3, #45	; 0x2d
 8000ad4:	4276      	negs	r6, r6
 8000ad6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ada:	485a      	ldr	r0, [pc, #360]	; (8000c44 <_printf_i+0x23c>)
 8000adc:	230a      	movs	r3, #10
 8000ade:	e012      	b.n	8000b06 <_printf_i+0xfe>
 8000ae0:	682b      	ldr	r3, [r5, #0]
 8000ae2:	6820      	ldr	r0, [r4, #0]
 8000ae4:	1d19      	adds	r1, r3, #4
 8000ae6:	6029      	str	r1, [r5, #0]
 8000ae8:	0605      	lsls	r5, r0, #24
 8000aea:	d501      	bpl.n	8000af0 <_printf_i+0xe8>
 8000aec:	681e      	ldr	r6, [r3, #0]
 8000aee:	e002      	b.n	8000af6 <_printf_i+0xee>
 8000af0:	0641      	lsls	r1, r0, #25
 8000af2:	d5fb      	bpl.n	8000aec <_printf_i+0xe4>
 8000af4:	881e      	ldrh	r6, [r3, #0]
 8000af6:	4853      	ldr	r0, [pc, #332]	; (8000c44 <_printf_i+0x23c>)
 8000af8:	2f6f      	cmp	r7, #111	; 0x6f
 8000afa:	bf0c      	ite	eq
 8000afc:	2308      	moveq	r3, #8
 8000afe:	230a      	movne	r3, #10
 8000b00:	2100      	movs	r1, #0
 8000b02:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000b06:	6865      	ldr	r5, [r4, #4]
 8000b08:	60a5      	str	r5, [r4, #8]
 8000b0a:	2d00      	cmp	r5, #0
 8000b0c:	bfa2      	ittt	ge
 8000b0e:	6821      	ldrge	r1, [r4, #0]
 8000b10:	f021 0104 	bicge.w	r1, r1, #4
 8000b14:	6021      	strge	r1, [r4, #0]
 8000b16:	b90e      	cbnz	r6, 8000b1c <_printf_i+0x114>
 8000b18:	2d00      	cmp	r5, #0
 8000b1a:	d04b      	beq.n	8000bb4 <_printf_i+0x1ac>
 8000b1c:	4615      	mov	r5, r2
 8000b1e:	fbb6 f1f3 	udiv	r1, r6, r3
 8000b22:	fb03 6711 	mls	r7, r3, r1, r6
 8000b26:	5dc7      	ldrb	r7, [r0, r7]
 8000b28:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000b2c:	4637      	mov	r7, r6
 8000b2e:	42bb      	cmp	r3, r7
 8000b30:	460e      	mov	r6, r1
 8000b32:	d9f4      	bls.n	8000b1e <_printf_i+0x116>
 8000b34:	2b08      	cmp	r3, #8
 8000b36:	d10b      	bne.n	8000b50 <_printf_i+0x148>
 8000b38:	6823      	ldr	r3, [r4, #0]
 8000b3a:	07de      	lsls	r6, r3, #31
 8000b3c:	d508      	bpl.n	8000b50 <_printf_i+0x148>
 8000b3e:	6923      	ldr	r3, [r4, #16]
 8000b40:	6861      	ldr	r1, [r4, #4]
 8000b42:	4299      	cmp	r1, r3
 8000b44:	bfde      	ittt	le
 8000b46:	2330      	movle	r3, #48	; 0x30
 8000b48:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000b4c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000b50:	1b52      	subs	r2, r2, r5
 8000b52:	6122      	str	r2, [r4, #16]
 8000b54:	f8cd a000 	str.w	sl, [sp]
 8000b58:	464b      	mov	r3, r9
 8000b5a:	aa03      	add	r2, sp, #12
 8000b5c:	4621      	mov	r1, r4
 8000b5e:	4640      	mov	r0, r8
 8000b60:	f7ff fee4 	bl	800092c <_printf_common>
 8000b64:	3001      	adds	r0, #1
 8000b66:	d14a      	bne.n	8000bfe <_printf_i+0x1f6>
 8000b68:	f04f 30ff 	mov.w	r0, #4294967295
 8000b6c:	b004      	add	sp, #16
 8000b6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b72:	6823      	ldr	r3, [r4, #0]
 8000b74:	f043 0320 	orr.w	r3, r3, #32
 8000b78:	6023      	str	r3, [r4, #0]
 8000b7a:	4833      	ldr	r0, [pc, #204]	; (8000c48 <_printf_i+0x240>)
 8000b7c:	2778      	movs	r7, #120	; 0x78
 8000b7e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000b82:	6823      	ldr	r3, [r4, #0]
 8000b84:	6829      	ldr	r1, [r5, #0]
 8000b86:	061f      	lsls	r7, r3, #24
 8000b88:	f851 6b04 	ldr.w	r6, [r1], #4
 8000b8c:	d402      	bmi.n	8000b94 <_printf_i+0x18c>
 8000b8e:	065f      	lsls	r7, r3, #25
 8000b90:	bf48      	it	mi
 8000b92:	b2b6      	uxthmi	r6, r6
 8000b94:	07df      	lsls	r7, r3, #31
 8000b96:	bf48      	it	mi
 8000b98:	f043 0320 	orrmi.w	r3, r3, #32
 8000b9c:	6029      	str	r1, [r5, #0]
 8000b9e:	bf48      	it	mi
 8000ba0:	6023      	strmi	r3, [r4, #0]
 8000ba2:	b91e      	cbnz	r6, 8000bac <_printf_i+0x1a4>
 8000ba4:	6823      	ldr	r3, [r4, #0]
 8000ba6:	f023 0320 	bic.w	r3, r3, #32
 8000baa:	6023      	str	r3, [r4, #0]
 8000bac:	2310      	movs	r3, #16
 8000bae:	e7a7      	b.n	8000b00 <_printf_i+0xf8>
 8000bb0:	4824      	ldr	r0, [pc, #144]	; (8000c44 <_printf_i+0x23c>)
 8000bb2:	e7e4      	b.n	8000b7e <_printf_i+0x176>
 8000bb4:	4615      	mov	r5, r2
 8000bb6:	e7bd      	b.n	8000b34 <_printf_i+0x12c>
 8000bb8:	682b      	ldr	r3, [r5, #0]
 8000bba:	6826      	ldr	r6, [r4, #0]
 8000bbc:	6961      	ldr	r1, [r4, #20]
 8000bbe:	1d18      	adds	r0, r3, #4
 8000bc0:	6028      	str	r0, [r5, #0]
 8000bc2:	0635      	lsls	r5, r6, #24
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	d501      	bpl.n	8000bcc <_printf_i+0x1c4>
 8000bc8:	6019      	str	r1, [r3, #0]
 8000bca:	e002      	b.n	8000bd2 <_printf_i+0x1ca>
 8000bcc:	0670      	lsls	r0, r6, #25
 8000bce:	d5fb      	bpl.n	8000bc8 <_printf_i+0x1c0>
 8000bd0:	8019      	strh	r1, [r3, #0]
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	6123      	str	r3, [r4, #16]
 8000bd6:	4615      	mov	r5, r2
 8000bd8:	e7bc      	b.n	8000b54 <_printf_i+0x14c>
 8000bda:	682b      	ldr	r3, [r5, #0]
 8000bdc:	1d1a      	adds	r2, r3, #4
 8000bde:	602a      	str	r2, [r5, #0]
 8000be0:	681d      	ldr	r5, [r3, #0]
 8000be2:	6862      	ldr	r2, [r4, #4]
 8000be4:	2100      	movs	r1, #0
 8000be6:	4628      	mov	r0, r5
 8000be8:	f7ff faf2 	bl	80001d0 <memchr>
 8000bec:	b108      	cbz	r0, 8000bf2 <_printf_i+0x1ea>
 8000bee:	1b40      	subs	r0, r0, r5
 8000bf0:	6060      	str	r0, [r4, #4]
 8000bf2:	6863      	ldr	r3, [r4, #4]
 8000bf4:	6123      	str	r3, [r4, #16]
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000bfc:	e7aa      	b.n	8000b54 <_printf_i+0x14c>
 8000bfe:	6923      	ldr	r3, [r4, #16]
 8000c00:	462a      	mov	r2, r5
 8000c02:	4649      	mov	r1, r9
 8000c04:	4640      	mov	r0, r8
 8000c06:	47d0      	blx	sl
 8000c08:	3001      	adds	r0, #1
 8000c0a:	d0ad      	beq.n	8000b68 <_printf_i+0x160>
 8000c0c:	6823      	ldr	r3, [r4, #0]
 8000c0e:	079b      	lsls	r3, r3, #30
 8000c10:	d413      	bmi.n	8000c3a <_printf_i+0x232>
 8000c12:	68e0      	ldr	r0, [r4, #12]
 8000c14:	9b03      	ldr	r3, [sp, #12]
 8000c16:	4298      	cmp	r0, r3
 8000c18:	bfb8      	it	lt
 8000c1a:	4618      	movlt	r0, r3
 8000c1c:	e7a6      	b.n	8000b6c <_printf_i+0x164>
 8000c1e:	2301      	movs	r3, #1
 8000c20:	4632      	mov	r2, r6
 8000c22:	4649      	mov	r1, r9
 8000c24:	4640      	mov	r0, r8
 8000c26:	47d0      	blx	sl
 8000c28:	3001      	adds	r0, #1
 8000c2a:	d09d      	beq.n	8000b68 <_printf_i+0x160>
 8000c2c:	3501      	adds	r5, #1
 8000c2e:	68e3      	ldr	r3, [r4, #12]
 8000c30:	9903      	ldr	r1, [sp, #12]
 8000c32:	1a5b      	subs	r3, r3, r1
 8000c34:	42ab      	cmp	r3, r5
 8000c36:	dcf2      	bgt.n	8000c1e <_printf_i+0x216>
 8000c38:	e7eb      	b.n	8000c12 <_printf_i+0x20a>
 8000c3a:	2500      	movs	r5, #0
 8000c3c:	f104 0619 	add.w	r6, r4, #25
 8000c40:	e7f5      	b.n	8000c2e <_printf_i+0x226>
 8000c42:	bf00      	nop
 8000c44:	08001669 	.word	0x08001669
 8000c48:	0800167a 	.word	0x0800167a

08000c4c <std>:
 8000c4c:	2300      	movs	r3, #0
 8000c4e:	b510      	push	{r4, lr}
 8000c50:	4604      	mov	r4, r0
 8000c52:	e9c0 3300 	strd	r3, r3, [r0]
 8000c56:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000c5a:	6083      	str	r3, [r0, #8]
 8000c5c:	8181      	strh	r1, [r0, #12]
 8000c5e:	6643      	str	r3, [r0, #100]	; 0x64
 8000c60:	81c2      	strh	r2, [r0, #14]
 8000c62:	6183      	str	r3, [r0, #24]
 8000c64:	4619      	mov	r1, r3
 8000c66:	2208      	movs	r2, #8
 8000c68:	305c      	adds	r0, #92	; 0x5c
 8000c6a:	f000 f9a3 	bl	8000fb4 <memset>
 8000c6e:	4b0d      	ldr	r3, [pc, #52]	; (8000ca4 <std+0x58>)
 8000c70:	6263      	str	r3, [r4, #36]	; 0x24
 8000c72:	4b0d      	ldr	r3, [pc, #52]	; (8000ca8 <std+0x5c>)
 8000c74:	62a3      	str	r3, [r4, #40]	; 0x28
 8000c76:	4b0d      	ldr	r3, [pc, #52]	; (8000cac <std+0x60>)
 8000c78:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000c7a:	4b0d      	ldr	r3, [pc, #52]	; (8000cb0 <std+0x64>)
 8000c7c:	6323      	str	r3, [r4, #48]	; 0x30
 8000c7e:	4b0d      	ldr	r3, [pc, #52]	; (8000cb4 <std+0x68>)
 8000c80:	6224      	str	r4, [r4, #32]
 8000c82:	429c      	cmp	r4, r3
 8000c84:	d006      	beq.n	8000c94 <std+0x48>
 8000c86:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000c8a:	4294      	cmp	r4, r2
 8000c8c:	d002      	beq.n	8000c94 <std+0x48>
 8000c8e:	33d0      	adds	r3, #208	; 0xd0
 8000c90:	429c      	cmp	r4, r3
 8000c92:	d105      	bne.n	8000ca0 <std+0x54>
 8000c94:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000c98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c9c:	f000 b9fc 	b.w	8001098 <__retarget_lock_init_recursive>
 8000ca0:	bd10      	pop	{r4, pc}
 8000ca2:	bf00      	nop
 8000ca4:	08000e05 	.word	0x08000e05
 8000ca8:	08000e27 	.word	0x08000e27
 8000cac:	08000e5f 	.word	0x08000e5f
 8000cb0:	08000e83 	.word	0x08000e83
 8000cb4:	20000084 	.word	0x20000084

08000cb8 <stdio_exit_handler>:
 8000cb8:	4a02      	ldr	r2, [pc, #8]	; (8000cc4 <stdio_exit_handler+0xc>)
 8000cba:	4903      	ldr	r1, [pc, #12]	; (8000cc8 <stdio_exit_handler+0x10>)
 8000cbc:	4803      	ldr	r0, [pc, #12]	; (8000ccc <stdio_exit_handler+0x14>)
 8000cbe:	f000 b869 	b.w	8000d94 <_fwalk_sglue>
 8000cc2:	bf00      	nop
 8000cc4:	20000008 	.word	0x20000008
 8000cc8:	0800139d 	.word	0x0800139d
 8000ccc:	20000014 	.word	0x20000014

08000cd0 <cleanup_stdio>:
 8000cd0:	6841      	ldr	r1, [r0, #4]
 8000cd2:	4b0c      	ldr	r3, [pc, #48]	; (8000d04 <cleanup_stdio+0x34>)
 8000cd4:	4299      	cmp	r1, r3
 8000cd6:	b510      	push	{r4, lr}
 8000cd8:	4604      	mov	r4, r0
 8000cda:	d001      	beq.n	8000ce0 <cleanup_stdio+0x10>
 8000cdc:	f000 fb5e 	bl	800139c <_fflush_r>
 8000ce0:	68a1      	ldr	r1, [r4, #8]
 8000ce2:	4b09      	ldr	r3, [pc, #36]	; (8000d08 <cleanup_stdio+0x38>)
 8000ce4:	4299      	cmp	r1, r3
 8000ce6:	d002      	beq.n	8000cee <cleanup_stdio+0x1e>
 8000ce8:	4620      	mov	r0, r4
 8000cea:	f000 fb57 	bl	800139c <_fflush_r>
 8000cee:	68e1      	ldr	r1, [r4, #12]
 8000cf0:	4b06      	ldr	r3, [pc, #24]	; (8000d0c <cleanup_stdio+0x3c>)
 8000cf2:	4299      	cmp	r1, r3
 8000cf4:	d004      	beq.n	8000d00 <cleanup_stdio+0x30>
 8000cf6:	4620      	mov	r0, r4
 8000cf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000cfc:	f000 bb4e 	b.w	800139c <_fflush_r>
 8000d00:	bd10      	pop	{r4, pc}
 8000d02:	bf00      	nop
 8000d04:	20000084 	.word	0x20000084
 8000d08:	200000ec 	.word	0x200000ec
 8000d0c:	20000154 	.word	0x20000154

08000d10 <global_stdio_init.part.0>:
 8000d10:	b510      	push	{r4, lr}
 8000d12:	4b0b      	ldr	r3, [pc, #44]	; (8000d40 <global_stdio_init.part.0+0x30>)
 8000d14:	4c0b      	ldr	r4, [pc, #44]	; (8000d44 <global_stdio_init.part.0+0x34>)
 8000d16:	4a0c      	ldr	r2, [pc, #48]	; (8000d48 <global_stdio_init.part.0+0x38>)
 8000d18:	601a      	str	r2, [r3, #0]
 8000d1a:	4620      	mov	r0, r4
 8000d1c:	2200      	movs	r2, #0
 8000d1e:	2104      	movs	r1, #4
 8000d20:	f7ff ff94 	bl	8000c4c <std>
 8000d24:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000d28:	2201      	movs	r2, #1
 8000d2a:	2109      	movs	r1, #9
 8000d2c:	f7ff ff8e 	bl	8000c4c <std>
 8000d30:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000d34:	2202      	movs	r2, #2
 8000d36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000d3a:	2112      	movs	r1, #18
 8000d3c:	f7ff bf86 	b.w	8000c4c <std>
 8000d40:	200001bc 	.word	0x200001bc
 8000d44:	20000084 	.word	0x20000084
 8000d48:	08000cb9 	.word	0x08000cb9

08000d4c <__sfp_lock_acquire>:
 8000d4c:	4801      	ldr	r0, [pc, #4]	; (8000d54 <__sfp_lock_acquire+0x8>)
 8000d4e:	f000 b9a4 	b.w	800109a <__retarget_lock_acquire_recursive>
 8000d52:	bf00      	nop
 8000d54:	200001c5 	.word	0x200001c5

08000d58 <__sfp_lock_release>:
 8000d58:	4801      	ldr	r0, [pc, #4]	; (8000d60 <__sfp_lock_release+0x8>)
 8000d5a:	f000 b99f 	b.w	800109c <__retarget_lock_release_recursive>
 8000d5e:	bf00      	nop
 8000d60:	200001c5 	.word	0x200001c5

08000d64 <__sinit>:
 8000d64:	b510      	push	{r4, lr}
 8000d66:	4604      	mov	r4, r0
 8000d68:	f7ff fff0 	bl	8000d4c <__sfp_lock_acquire>
 8000d6c:	6a23      	ldr	r3, [r4, #32]
 8000d6e:	b11b      	cbz	r3, 8000d78 <__sinit+0x14>
 8000d70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000d74:	f7ff bff0 	b.w	8000d58 <__sfp_lock_release>
 8000d78:	4b04      	ldr	r3, [pc, #16]	; (8000d8c <__sinit+0x28>)
 8000d7a:	6223      	str	r3, [r4, #32]
 8000d7c:	4b04      	ldr	r3, [pc, #16]	; (8000d90 <__sinit+0x2c>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d1f5      	bne.n	8000d70 <__sinit+0xc>
 8000d84:	f7ff ffc4 	bl	8000d10 <global_stdio_init.part.0>
 8000d88:	e7f2      	b.n	8000d70 <__sinit+0xc>
 8000d8a:	bf00      	nop
 8000d8c:	08000cd1 	.word	0x08000cd1
 8000d90:	200001bc 	.word	0x200001bc

08000d94 <_fwalk_sglue>:
 8000d94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000d98:	4607      	mov	r7, r0
 8000d9a:	4688      	mov	r8, r1
 8000d9c:	4614      	mov	r4, r2
 8000d9e:	2600      	movs	r6, #0
 8000da0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000da4:	f1b9 0901 	subs.w	r9, r9, #1
 8000da8:	d505      	bpl.n	8000db6 <_fwalk_sglue+0x22>
 8000daa:	6824      	ldr	r4, [r4, #0]
 8000dac:	2c00      	cmp	r4, #0
 8000dae:	d1f7      	bne.n	8000da0 <_fwalk_sglue+0xc>
 8000db0:	4630      	mov	r0, r6
 8000db2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000db6:	89ab      	ldrh	r3, [r5, #12]
 8000db8:	2b01      	cmp	r3, #1
 8000dba:	d907      	bls.n	8000dcc <_fwalk_sglue+0x38>
 8000dbc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000dc0:	3301      	adds	r3, #1
 8000dc2:	d003      	beq.n	8000dcc <_fwalk_sglue+0x38>
 8000dc4:	4629      	mov	r1, r5
 8000dc6:	4638      	mov	r0, r7
 8000dc8:	47c0      	blx	r8
 8000dca:	4306      	orrs	r6, r0
 8000dcc:	3568      	adds	r5, #104	; 0x68
 8000dce:	e7e9      	b.n	8000da4 <_fwalk_sglue+0x10>

08000dd0 <iprintf>:
 8000dd0:	b40f      	push	{r0, r1, r2, r3}
 8000dd2:	b507      	push	{r0, r1, r2, lr}
 8000dd4:	4906      	ldr	r1, [pc, #24]	; (8000df0 <iprintf+0x20>)
 8000dd6:	ab04      	add	r3, sp, #16
 8000dd8:	6808      	ldr	r0, [r1, #0]
 8000dda:	f853 2b04 	ldr.w	r2, [r3], #4
 8000dde:	6881      	ldr	r1, [r0, #8]
 8000de0:	9301      	str	r3, [sp, #4]
 8000de2:	f7ff fc7f 	bl	80006e4 <_vfiprintf_r>
 8000de6:	b003      	add	sp, #12
 8000de8:	f85d eb04 	ldr.w	lr, [sp], #4
 8000dec:	b004      	add	sp, #16
 8000dee:	4770      	bx	lr
 8000df0:	20000060 	.word	0x20000060

08000df4 <putchar>:
 8000df4:	4b02      	ldr	r3, [pc, #8]	; (8000e00 <putchar+0xc>)
 8000df6:	4601      	mov	r1, r0
 8000df8:	6818      	ldr	r0, [r3, #0]
 8000dfa:	6882      	ldr	r2, [r0, #8]
 8000dfc:	f000 bb58 	b.w	80014b0 <_putc_r>
 8000e00:	20000060 	.word	0x20000060

08000e04 <__sread>:
 8000e04:	b510      	push	{r4, lr}
 8000e06:	460c      	mov	r4, r1
 8000e08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e0c:	f000 f8fc 	bl	8001008 <_read_r>
 8000e10:	2800      	cmp	r0, #0
 8000e12:	bfab      	itete	ge
 8000e14:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e16:	89a3      	ldrhlt	r3, [r4, #12]
 8000e18:	181b      	addge	r3, r3, r0
 8000e1a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e1e:	bfac      	ite	ge
 8000e20:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e22:	81a3      	strhlt	r3, [r4, #12]
 8000e24:	bd10      	pop	{r4, pc}

08000e26 <__swrite>:
 8000e26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e2a:	461f      	mov	r7, r3
 8000e2c:	898b      	ldrh	r3, [r1, #12]
 8000e2e:	05db      	lsls	r3, r3, #23
 8000e30:	4605      	mov	r5, r0
 8000e32:	460c      	mov	r4, r1
 8000e34:	4616      	mov	r6, r2
 8000e36:	d505      	bpl.n	8000e44 <__swrite+0x1e>
 8000e38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e3c:	2302      	movs	r3, #2
 8000e3e:	2200      	movs	r2, #0
 8000e40:	f000 f8d0 	bl	8000fe4 <_lseek_r>
 8000e44:	89a3      	ldrh	r3, [r4, #12]
 8000e46:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e4a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e4e:	81a3      	strh	r3, [r4, #12]
 8000e50:	4632      	mov	r2, r6
 8000e52:	463b      	mov	r3, r7
 8000e54:	4628      	mov	r0, r5
 8000e56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e5a:	f000 b8e7 	b.w	800102c <_write_r>

08000e5e <__sseek>:
 8000e5e:	b510      	push	{r4, lr}
 8000e60:	460c      	mov	r4, r1
 8000e62:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e66:	f000 f8bd 	bl	8000fe4 <_lseek_r>
 8000e6a:	1c43      	adds	r3, r0, #1
 8000e6c:	89a3      	ldrh	r3, [r4, #12]
 8000e6e:	bf15      	itete	ne
 8000e70:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e72:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e76:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e7a:	81a3      	strheq	r3, [r4, #12]
 8000e7c:	bf18      	it	ne
 8000e7e:	81a3      	strhne	r3, [r4, #12]
 8000e80:	bd10      	pop	{r4, pc}

08000e82 <__sclose>:
 8000e82:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e86:	f000 b89d 	b.w	8000fc4 <_close_r>

08000e8a <__swbuf_r>:
 8000e8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e8c:	460e      	mov	r6, r1
 8000e8e:	4614      	mov	r4, r2
 8000e90:	4605      	mov	r5, r0
 8000e92:	b118      	cbz	r0, 8000e9c <__swbuf_r+0x12>
 8000e94:	6a03      	ldr	r3, [r0, #32]
 8000e96:	b90b      	cbnz	r3, 8000e9c <__swbuf_r+0x12>
 8000e98:	f7ff ff64 	bl	8000d64 <__sinit>
 8000e9c:	69a3      	ldr	r3, [r4, #24]
 8000e9e:	60a3      	str	r3, [r4, #8]
 8000ea0:	89a3      	ldrh	r3, [r4, #12]
 8000ea2:	071a      	lsls	r2, r3, #28
 8000ea4:	d525      	bpl.n	8000ef2 <__swbuf_r+0x68>
 8000ea6:	6923      	ldr	r3, [r4, #16]
 8000ea8:	b31b      	cbz	r3, 8000ef2 <__swbuf_r+0x68>
 8000eaa:	6823      	ldr	r3, [r4, #0]
 8000eac:	6922      	ldr	r2, [r4, #16]
 8000eae:	1a98      	subs	r0, r3, r2
 8000eb0:	6963      	ldr	r3, [r4, #20]
 8000eb2:	b2f6      	uxtb	r6, r6
 8000eb4:	4283      	cmp	r3, r0
 8000eb6:	4637      	mov	r7, r6
 8000eb8:	dc04      	bgt.n	8000ec4 <__swbuf_r+0x3a>
 8000eba:	4621      	mov	r1, r4
 8000ebc:	4628      	mov	r0, r5
 8000ebe:	f000 fa6d 	bl	800139c <_fflush_r>
 8000ec2:	b9e0      	cbnz	r0, 8000efe <__swbuf_r+0x74>
 8000ec4:	68a3      	ldr	r3, [r4, #8]
 8000ec6:	3b01      	subs	r3, #1
 8000ec8:	60a3      	str	r3, [r4, #8]
 8000eca:	6823      	ldr	r3, [r4, #0]
 8000ecc:	1c5a      	adds	r2, r3, #1
 8000ece:	6022      	str	r2, [r4, #0]
 8000ed0:	701e      	strb	r6, [r3, #0]
 8000ed2:	6962      	ldr	r2, [r4, #20]
 8000ed4:	1c43      	adds	r3, r0, #1
 8000ed6:	429a      	cmp	r2, r3
 8000ed8:	d004      	beq.n	8000ee4 <__swbuf_r+0x5a>
 8000eda:	89a3      	ldrh	r3, [r4, #12]
 8000edc:	07db      	lsls	r3, r3, #31
 8000ede:	d506      	bpl.n	8000eee <__swbuf_r+0x64>
 8000ee0:	2e0a      	cmp	r6, #10
 8000ee2:	d104      	bne.n	8000eee <__swbuf_r+0x64>
 8000ee4:	4621      	mov	r1, r4
 8000ee6:	4628      	mov	r0, r5
 8000ee8:	f000 fa58 	bl	800139c <_fflush_r>
 8000eec:	b938      	cbnz	r0, 8000efe <__swbuf_r+0x74>
 8000eee:	4638      	mov	r0, r7
 8000ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ef2:	4621      	mov	r1, r4
 8000ef4:	4628      	mov	r0, r5
 8000ef6:	f000 f805 	bl	8000f04 <__swsetup_r>
 8000efa:	2800      	cmp	r0, #0
 8000efc:	d0d5      	beq.n	8000eaa <__swbuf_r+0x20>
 8000efe:	f04f 37ff 	mov.w	r7, #4294967295
 8000f02:	e7f4      	b.n	8000eee <__swbuf_r+0x64>

08000f04 <__swsetup_r>:
 8000f04:	b538      	push	{r3, r4, r5, lr}
 8000f06:	4b2a      	ldr	r3, [pc, #168]	; (8000fb0 <__swsetup_r+0xac>)
 8000f08:	4605      	mov	r5, r0
 8000f0a:	6818      	ldr	r0, [r3, #0]
 8000f0c:	460c      	mov	r4, r1
 8000f0e:	b118      	cbz	r0, 8000f18 <__swsetup_r+0x14>
 8000f10:	6a03      	ldr	r3, [r0, #32]
 8000f12:	b90b      	cbnz	r3, 8000f18 <__swsetup_r+0x14>
 8000f14:	f7ff ff26 	bl	8000d64 <__sinit>
 8000f18:	89a3      	ldrh	r3, [r4, #12]
 8000f1a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f1e:	0718      	lsls	r0, r3, #28
 8000f20:	d422      	bmi.n	8000f68 <__swsetup_r+0x64>
 8000f22:	06d9      	lsls	r1, r3, #27
 8000f24:	d407      	bmi.n	8000f36 <__swsetup_r+0x32>
 8000f26:	2309      	movs	r3, #9
 8000f28:	602b      	str	r3, [r5, #0]
 8000f2a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000f2e:	81a3      	strh	r3, [r4, #12]
 8000f30:	f04f 30ff 	mov.w	r0, #4294967295
 8000f34:	e034      	b.n	8000fa0 <__swsetup_r+0x9c>
 8000f36:	0758      	lsls	r0, r3, #29
 8000f38:	d512      	bpl.n	8000f60 <__swsetup_r+0x5c>
 8000f3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f3c:	b141      	cbz	r1, 8000f50 <__swsetup_r+0x4c>
 8000f3e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f42:	4299      	cmp	r1, r3
 8000f44:	d002      	beq.n	8000f4c <__swsetup_r+0x48>
 8000f46:	4628      	mov	r0, r5
 8000f48:	f000 f8aa 	bl	80010a0 <_free_r>
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	6363      	str	r3, [r4, #52]	; 0x34
 8000f50:	89a3      	ldrh	r3, [r4, #12]
 8000f52:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000f56:	81a3      	strh	r3, [r4, #12]
 8000f58:	2300      	movs	r3, #0
 8000f5a:	6063      	str	r3, [r4, #4]
 8000f5c:	6923      	ldr	r3, [r4, #16]
 8000f5e:	6023      	str	r3, [r4, #0]
 8000f60:	89a3      	ldrh	r3, [r4, #12]
 8000f62:	f043 0308 	orr.w	r3, r3, #8
 8000f66:	81a3      	strh	r3, [r4, #12]
 8000f68:	6923      	ldr	r3, [r4, #16]
 8000f6a:	b94b      	cbnz	r3, 8000f80 <__swsetup_r+0x7c>
 8000f6c:	89a3      	ldrh	r3, [r4, #12]
 8000f6e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000f72:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000f76:	d003      	beq.n	8000f80 <__swsetup_r+0x7c>
 8000f78:	4621      	mov	r1, r4
 8000f7a:	4628      	mov	r0, r5
 8000f7c:	f000 fa5c 	bl	8001438 <__smakebuf_r>
 8000f80:	89a0      	ldrh	r0, [r4, #12]
 8000f82:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f86:	f010 0301 	ands.w	r3, r0, #1
 8000f8a:	d00a      	beq.n	8000fa2 <__swsetup_r+0x9e>
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	60a3      	str	r3, [r4, #8]
 8000f90:	6963      	ldr	r3, [r4, #20]
 8000f92:	425b      	negs	r3, r3
 8000f94:	61a3      	str	r3, [r4, #24]
 8000f96:	6923      	ldr	r3, [r4, #16]
 8000f98:	b943      	cbnz	r3, 8000fac <__swsetup_r+0xa8>
 8000f9a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000f9e:	d1c4      	bne.n	8000f2a <__swsetup_r+0x26>
 8000fa0:	bd38      	pop	{r3, r4, r5, pc}
 8000fa2:	0781      	lsls	r1, r0, #30
 8000fa4:	bf58      	it	pl
 8000fa6:	6963      	ldrpl	r3, [r4, #20]
 8000fa8:	60a3      	str	r3, [r4, #8]
 8000faa:	e7f4      	b.n	8000f96 <__swsetup_r+0x92>
 8000fac:	2000      	movs	r0, #0
 8000fae:	e7f7      	b.n	8000fa0 <__swsetup_r+0x9c>
 8000fb0:	20000060 	.word	0x20000060

08000fb4 <memset>:
 8000fb4:	4402      	add	r2, r0
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	4293      	cmp	r3, r2
 8000fba:	d100      	bne.n	8000fbe <memset+0xa>
 8000fbc:	4770      	bx	lr
 8000fbe:	f803 1b01 	strb.w	r1, [r3], #1
 8000fc2:	e7f9      	b.n	8000fb8 <memset+0x4>

08000fc4 <_close_r>:
 8000fc4:	b538      	push	{r3, r4, r5, lr}
 8000fc6:	4d06      	ldr	r5, [pc, #24]	; (8000fe0 <_close_r+0x1c>)
 8000fc8:	2300      	movs	r3, #0
 8000fca:	4604      	mov	r4, r0
 8000fcc:	4608      	mov	r0, r1
 8000fce:	602b      	str	r3, [r5, #0]
 8000fd0:	f000 fad4 	bl	800157c <_close>
 8000fd4:	1c43      	adds	r3, r0, #1
 8000fd6:	d102      	bne.n	8000fde <_close_r+0x1a>
 8000fd8:	682b      	ldr	r3, [r5, #0]
 8000fda:	b103      	cbz	r3, 8000fde <_close_r+0x1a>
 8000fdc:	6023      	str	r3, [r4, #0]
 8000fde:	bd38      	pop	{r3, r4, r5, pc}
 8000fe0:	200001c0 	.word	0x200001c0

08000fe4 <_lseek_r>:
 8000fe4:	b538      	push	{r3, r4, r5, lr}
 8000fe6:	4d07      	ldr	r5, [pc, #28]	; (8001004 <_lseek_r+0x20>)
 8000fe8:	4604      	mov	r4, r0
 8000fea:	4608      	mov	r0, r1
 8000fec:	4611      	mov	r1, r2
 8000fee:	2200      	movs	r2, #0
 8000ff0:	602a      	str	r2, [r5, #0]
 8000ff2:	461a      	mov	r2, r3
 8000ff4:	f000 fada 	bl	80015ac <_lseek>
 8000ff8:	1c43      	adds	r3, r0, #1
 8000ffa:	d102      	bne.n	8001002 <_lseek_r+0x1e>
 8000ffc:	682b      	ldr	r3, [r5, #0]
 8000ffe:	b103      	cbz	r3, 8001002 <_lseek_r+0x1e>
 8001000:	6023      	str	r3, [r4, #0]
 8001002:	bd38      	pop	{r3, r4, r5, pc}
 8001004:	200001c0 	.word	0x200001c0

08001008 <_read_r>:
 8001008:	b538      	push	{r3, r4, r5, lr}
 800100a:	4d07      	ldr	r5, [pc, #28]	; (8001028 <_read_r+0x20>)
 800100c:	4604      	mov	r4, r0
 800100e:	4608      	mov	r0, r1
 8001010:	4611      	mov	r1, r2
 8001012:	2200      	movs	r2, #0
 8001014:	602a      	str	r2, [r5, #0]
 8001016:	461a      	mov	r2, r3
 8001018:	f000 fad0 	bl	80015bc <_read>
 800101c:	1c43      	adds	r3, r0, #1
 800101e:	d102      	bne.n	8001026 <_read_r+0x1e>
 8001020:	682b      	ldr	r3, [r5, #0]
 8001022:	b103      	cbz	r3, 8001026 <_read_r+0x1e>
 8001024:	6023      	str	r3, [r4, #0]
 8001026:	bd38      	pop	{r3, r4, r5, pc}
 8001028:	200001c0 	.word	0x200001c0

0800102c <_write_r>:
 800102c:	b538      	push	{r3, r4, r5, lr}
 800102e:	4d07      	ldr	r5, [pc, #28]	; (800104c <_write_r+0x20>)
 8001030:	4604      	mov	r4, r0
 8001032:	4608      	mov	r0, r1
 8001034:	4611      	mov	r1, r2
 8001036:	2200      	movs	r2, #0
 8001038:	602a      	str	r2, [r5, #0]
 800103a:	461a      	mov	r2, r3
 800103c:	f7ff f93f 	bl	80002be <_write>
 8001040:	1c43      	adds	r3, r0, #1
 8001042:	d102      	bne.n	800104a <_write_r+0x1e>
 8001044:	682b      	ldr	r3, [r5, #0]
 8001046:	b103      	cbz	r3, 800104a <_write_r+0x1e>
 8001048:	6023      	str	r3, [r4, #0]
 800104a:	bd38      	pop	{r3, r4, r5, pc}
 800104c:	200001c0 	.word	0x200001c0

08001050 <__libc_init_array>:
 8001050:	b570      	push	{r4, r5, r6, lr}
 8001052:	4d0d      	ldr	r5, [pc, #52]	; (8001088 <__libc_init_array+0x38>)
 8001054:	4c0d      	ldr	r4, [pc, #52]	; (800108c <__libc_init_array+0x3c>)
 8001056:	1b64      	subs	r4, r4, r5
 8001058:	10a4      	asrs	r4, r4, #2
 800105a:	2600      	movs	r6, #0
 800105c:	42a6      	cmp	r6, r4
 800105e:	d109      	bne.n	8001074 <__libc_init_array+0x24>
 8001060:	4d0b      	ldr	r5, [pc, #44]	; (8001090 <__libc_init_array+0x40>)
 8001062:	4c0c      	ldr	r4, [pc, #48]	; (8001094 <__libc_init_array+0x44>)
 8001064:	f000 fac0 	bl	80015e8 <_init>
 8001068:	1b64      	subs	r4, r4, r5
 800106a:	10a4      	asrs	r4, r4, #2
 800106c:	2600      	movs	r6, #0
 800106e:	42a6      	cmp	r6, r4
 8001070:	d105      	bne.n	800107e <__libc_init_array+0x2e>
 8001072:	bd70      	pop	{r4, r5, r6, pc}
 8001074:	f855 3b04 	ldr.w	r3, [r5], #4
 8001078:	4798      	blx	r3
 800107a:	3601      	adds	r6, #1
 800107c:	e7ee      	b.n	800105c <__libc_init_array+0xc>
 800107e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001082:	4798      	blx	r3
 8001084:	3601      	adds	r6, #1
 8001086:	e7f2      	b.n	800106e <__libc_init_array+0x1e>
 8001088:	0800168c 	.word	0x0800168c
 800108c:	0800168c 	.word	0x0800168c
 8001090:	0800168c 	.word	0x0800168c
 8001094:	08001690 	.word	0x08001690

08001098 <__retarget_lock_init_recursive>:
 8001098:	4770      	bx	lr

0800109a <__retarget_lock_acquire_recursive>:
 800109a:	4770      	bx	lr

0800109c <__retarget_lock_release_recursive>:
 800109c:	4770      	bx	lr
	...

080010a0 <_free_r>:
 80010a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80010a2:	2900      	cmp	r1, #0
 80010a4:	d044      	beq.n	8001130 <_free_r+0x90>
 80010a6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80010aa:	9001      	str	r0, [sp, #4]
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	f1a1 0404 	sub.w	r4, r1, #4
 80010b2:	bfb8      	it	lt
 80010b4:	18e4      	addlt	r4, r4, r3
 80010b6:	f000 f8df 	bl	8001278 <__malloc_lock>
 80010ba:	4a1e      	ldr	r2, [pc, #120]	; (8001134 <_free_r+0x94>)
 80010bc:	9801      	ldr	r0, [sp, #4]
 80010be:	6813      	ldr	r3, [r2, #0]
 80010c0:	b933      	cbnz	r3, 80010d0 <_free_r+0x30>
 80010c2:	6063      	str	r3, [r4, #4]
 80010c4:	6014      	str	r4, [r2, #0]
 80010c6:	b003      	add	sp, #12
 80010c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80010cc:	f000 b8da 	b.w	8001284 <__malloc_unlock>
 80010d0:	42a3      	cmp	r3, r4
 80010d2:	d908      	bls.n	80010e6 <_free_r+0x46>
 80010d4:	6825      	ldr	r5, [r4, #0]
 80010d6:	1961      	adds	r1, r4, r5
 80010d8:	428b      	cmp	r3, r1
 80010da:	bf01      	itttt	eq
 80010dc:	6819      	ldreq	r1, [r3, #0]
 80010de:	685b      	ldreq	r3, [r3, #4]
 80010e0:	1949      	addeq	r1, r1, r5
 80010e2:	6021      	streq	r1, [r4, #0]
 80010e4:	e7ed      	b.n	80010c2 <_free_r+0x22>
 80010e6:	461a      	mov	r2, r3
 80010e8:	685b      	ldr	r3, [r3, #4]
 80010ea:	b10b      	cbz	r3, 80010f0 <_free_r+0x50>
 80010ec:	42a3      	cmp	r3, r4
 80010ee:	d9fa      	bls.n	80010e6 <_free_r+0x46>
 80010f0:	6811      	ldr	r1, [r2, #0]
 80010f2:	1855      	adds	r5, r2, r1
 80010f4:	42a5      	cmp	r5, r4
 80010f6:	d10b      	bne.n	8001110 <_free_r+0x70>
 80010f8:	6824      	ldr	r4, [r4, #0]
 80010fa:	4421      	add	r1, r4
 80010fc:	1854      	adds	r4, r2, r1
 80010fe:	42a3      	cmp	r3, r4
 8001100:	6011      	str	r1, [r2, #0]
 8001102:	d1e0      	bne.n	80010c6 <_free_r+0x26>
 8001104:	681c      	ldr	r4, [r3, #0]
 8001106:	685b      	ldr	r3, [r3, #4]
 8001108:	6053      	str	r3, [r2, #4]
 800110a:	440c      	add	r4, r1
 800110c:	6014      	str	r4, [r2, #0]
 800110e:	e7da      	b.n	80010c6 <_free_r+0x26>
 8001110:	d902      	bls.n	8001118 <_free_r+0x78>
 8001112:	230c      	movs	r3, #12
 8001114:	6003      	str	r3, [r0, #0]
 8001116:	e7d6      	b.n	80010c6 <_free_r+0x26>
 8001118:	6825      	ldr	r5, [r4, #0]
 800111a:	1961      	adds	r1, r4, r5
 800111c:	428b      	cmp	r3, r1
 800111e:	bf04      	itt	eq
 8001120:	6819      	ldreq	r1, [r3, #0]
 8001122:	685b      	ldreq	r3, [r3, #4]
 8001124:	6063      	str	r3, [r4, #4]
 8001126:	bf04      	itt	eq
 8001128:	1949      	addeq	r1, r1, r5
 800112a:	6021      	streq	r1, [r4, #0]
 800112c:	6054      	str	r4, [r2, #4]
 800112e:	e7ca      	b.n	80010c6 <_free_r+0x26>
 8001130:	b003      	add	sp, #12
 8001132:	bd30      	pop	{r4, r5, pc}
 8001134:	200001c8 	.word	0x200001c8

08001138 <sbrk_aligned>:
 8001138:	b570      	push	{r4, r5, r6, lr}
 800113a:	4e0e      	ldr	r6, [pc, #56]	; (8001174 <sbrk_aligned+0x3c>)
 800113c:	460c      	mov	r4, r1
 800113e:	6831      	ldr	r1, [r6, #0]
 8001140:	4605      	mov	r5, r0
 8001142:	b911      	cbnz	r1, 800114a <sbrk_aligned+0x12>
 8001144:	f000 fa0a 	bl	800155c <_sbrk_r>
 8001148:	6030      	str	r0, [r6, #0]
 800114a:	4621      	mov	r1, r4
 800114c:	4628      	mov	r0, r5
 800114e:	f000 fa05 	bl	800155c <_sbrk_r>
 8001152:	1c43      	adds	r3, r0, #1
 8001154:	d00a      	beq.n	800116c <sbrk_aligned+0x34>
 8001156:	1cc4      	adds	r4, r0, #3
 8001158:	f024 0403 	bic.w	r4, r4, #3
 800115c:	42a0      	cmp	r0, r4
 800115e:	d007      	beq.n	8001170 <sbrk_aligned+0x38>
 8001160:	1a21      	subs	r1, r4, r0
 8001162:	4628      	mov	r0, r5
 8001164:	f000 f9fa 	bl	800155c <_sbrk_r>
 8001168:	3001      	adds	r0, #1
 800116a:	d101      	bne.n	8001170 <sbrk_aligned+0x38>
 800116c:	f04f 34ff 	mov.w	r4, #4294967295
 8001170:	4620      	mov	r0, r4
 8001172:	bd70      	pop	{r4, r5, r6, pc}
 8001174:	200001cc 	.word	0x200001cc

08001178 <_malloc_r>:
 8001178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800117c:	1ccd      	adds	r5, r1, #3
 800117e:	f025 0503 	bic.w	r5, r5, #3
 8001182:	3508      	adds	r5, #8
 8001184:	2d0c      	cmp	r5, #12
 8001186:	bf38      	it	cc
 8001188:	250c      	movcc	r5, #12
 800118a:	2d00      	cmp	r5, #0
 800118c:	4607      	mov	r7, r0
 800118e:	db01      	blt.n	8001194 <_malloc_r+0x1c>
 8001190:	42a9      	cmp	r1, r5
 8001192:	d905      	bls.n	80011a0 <_malloc_r+0x28>
 8001194:	230c      	movs	r3, #12
 8001196:	603b      	str	r3, [r7, #0]
 8001198:	2600      	movs	r6, #0
 800119a:	4630      	mov	r0, r6
 800119c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80011a0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8001274 <_malloc_r+0xfc>
 80011a4:	f000 f868 	bl	8001278 <__malloc_lock>
 80011a8:	f8d8 3000 	ldr.w	r3, [r8]
 80011ac:	461c      	mov	r4, r3
 80011ae:	bb5c      	cbnz	r4, 8001208 <_malloc_r+0x90>
 80011b0:	4629      	mov	r1, r5
 80011b2:	4638      	mov	r0, r7
 80011b4:	f7ff ffc0 	bl	8001138 <sbrk_aligned>
 80011b8:	1c43      	adds	r3, r0, #1
 80011ba:	4604      	mov	r4, r0
 80011bc:	d155      	bne.n	800126a <_malloc_r+0xf2>
 80011be:	f8d8 4000 	ldr.w	r4, [r8]
 80011c2:	4626      	mov	r6, r4
 80011c4:	2e00      	cmp	r6, #0
 80011c6:	d145      	bne.n	8001254 <_malloc_r+0xdc>
 80011c8:	2c00      	cmp	r4, #0
 80011ca:	d048      	beq.n	800125e <_malloc_r+0xe6>
 80011cc:	6823      	ldr	r3, [r4, #0]
 80011ce:	4631      	mov	r1, r6
 80011d0:	4638      	mov	r0, r7
 80011d2:	eb04 0903 	add.w	r9, r4, r3
 80011d6:	f000 f9c1 	bl	800155c <_sbrk_r>
 80011da:	4581      	cmp	r9, r0
 80011dc:	d13f      	bne.n	800125e <_malloc_r+0xe6>
 80011de:	6821      	ldr	r1, [r4, #0]
 80011e0:	1a6d      	subs	r5, r5, r1
 80011e2:	4629      	mov	r1, r5
 80011e4:	4638      	mov	r0, r7
 80011e6:	f7ff ffa7 	bl	8001138 <sbrk_aligned>
 80011ea:	3001      	adds	r0, #1
 80011ec:	d037      	beq.n	800125e <_malloc_r+0xe6>
 80011ee:	6823      	ldr	r3, [r4, #0]
 80011f0:	442b      	add	r3, r5
 80011f2:	6023      	str	r3, [r4, #0]
 80011f4:	f8d8 3000 	ldr.w	r3, [r8]
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d038      	beq.n	800126e <_malloc_r+0xf6>
 80011fc:	685a      	ldr	r2, [r3, #4]
 80011fe:	42a2      	cmp	r2, r4
 8001200:	d12b      	bne.n	800125a <_malloc_r+0xe2>
 8001202:	2200      	movs	r2, #0
 8001204:	605a      	str	r2, [r3, #4]
 8001206:	e00f      	b.n	8001228 <_malloc_r+0xb0>
 8001208:	6822      	ldr	r2, [r4, #0]
 800120a:	1b52      	subs	r2, r2, r5
 800120c:	d41f      	bmi.n	800124e <_malloc_r+0xd6>
 800120e:	2a0b      	cmp	r2, #11
 8001210:	d917      	bls.n	8001242 <_malloc_r+0xca>
 8001212:	1961      	adds	r1, r4, r5
 8001214:	42a3      	cmp	r3, r4
 8001216:	6025      	str	r5, [r4, #0]
 8001218:	bf18      	it	ne
 800121a:	6059      	strne	r1, [r3, #4]
 800121c:	6863      	ldr	r3, [r4, #4]
 800121e:	bf08      	it	eq
 8001220:	f8c8 1000 	streq.w	r1, [r8]
 8001224:	5162      	str	r2, [r4, r5]
 8001226:	604b      	str	r3, [r1, #4]
 8001228:	4638      	mov	r0, r7
 800122a:	f104 060b 	add.w	r6, r4, #11
 800122e:	f000 f829 	bl	8001284 <__malloc_unlock>
 8001232:	f026 0607 	bic.w	r6, r6, #7
 8001236:	1d23      	adds	r3, r4, #4
 8001238:	1af2      	subs	r2, r6, r3
 800123a:	d0ae      	beq.n	800119a <_malloc_r+0x22>
 800123c:	1b9b      	subs	r3, r3, r6
 800123e:	50a3      	str	r3, [r4, r2]
 8001240:	e7ab      	b.n	800119a <_malloc_r+0x22>
 8001242:	42a3      	cmp	r3, r4
 8001244:	6862      	ldr	r2, [r4, #4]
 8001246:	d1dd      	bne.n	8001204 <_malloc_r+0x8c>
 8001248:	f8c8 2000 	str.w	r2, [r8]
 800124c:	e7ec      	b.n	8001228 <_malloc_r+0xb0>
 800124e:	4623      	mov	r3, r4
 8001250:	6864      	ldr	r4, [r4, #4]
 8001252:	e7ac      	b.n	80011ae <_malloc_r+0x36>
 8001254:	4634      	mov	r4, r6
 8001256:	6876      	ldr	r6, [r6, #4]
 8001258:	e7b4      	b.n	80011c4 <_malloc_r+0x4c>
 800125a:	4613      	mov	r3, r2
 800125c:	e7cc      	b.n	80011f8 <_malloc_r+0x80>
 800125e:	230c      	movs	r3, #12
 8001260:	603b      	str	r3, [r7, #0]
 8001262:	4638      	mov	r0, r7
 8001264:	f000 f80e 	bl	8001284 <__malloc_unlock>
 8001268:	e797      	b.n	800119a <_malloc_r+0x22>
 800126a:	6025      	str	r5, [r4, #0]
 800126c:	e7dc      	b.n	8001228 <_malloc_r+0xb0>
 800126e:	605b      	str	r3, [r3, #4]
 8001270:	deff      	udf	#255	; 0xff
 8001272:	bf00      	nop
 8001274:	200001c8 	.word	0x200001c8

08001278 <__malloc_lock>:
 8001278:	4801      	ldr	r0, [pc, #4]	; (8001280 <__malloc_lock+0x8>)
 800127a:	f7ff bf0e 	b.w	800109a <__retarget_lock_acquire_recursive>
 800127e:	bf00      	nop
 8001280:	200001c4 	.word	0x200001c4

08001284 <__malloc_unlock>:
 8001284:	4801      	ldr	r0, [pc, #4]	; (800128c <__malloc_unlock+0x8>)
 8001286:	f7ff bf09 	b.w	800109c <__retarget_lock_release_recursive>
 800128a:	bf00      	nop
 800128c:	200001c4 	.word	0x200001c4

08001290 <__sflush_r>:
 8001290:	898a      	ldrh	r2, [r1, #12]
 8001292:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001296:	4605      	mov	r5, r0
 8001298:	0710      	lsls	r0, r2, #28
 800129a:	460c      	mov	r4, r1
 800129c:	d458      	bmi.n	8001350 <__sflush_r+0xc0>
 800129e:	684b      	ldr	r3, [r1, #4]
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	dc05      	bgt.n	80012b0 <__sflush_r+0x20>
 80012a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	dc02      	bgt.n	80012b0 <__sflush_r+0x20>
 80012aa:	2000      	movs	r0, #0
 80012ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80012b2:	2e00      	cmp	r6, #0
 80012b4:	d0f9      	beq.n	80012aa <__sflush_r+0x1a>
 80012b6:	2300      	movs	r3, #0
 80012b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80012bc:	682f      	ldr	r7, [r5, #0]
 80012be:	6a21      	ldr	r1, [r4, #32]
 80012c0:	602b      	str	r3, [r5, #0]
 80012c2:	d032      	beq.n	800132a <__sflush_r+0x9a>
 80012c4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80012c6:	89a3      	ldrh	r3, [r4, #12]
 80012c8:	075a      	lsls	r2, r3, #29
 80012ca:	d505      	bpl.n	80012d8 <__sflush_r+0x48>
 80012cc:	6863      	ldr	r3, [r4, #4]
 80012ce:	1ac0      	subs	r0, r0, r3
 80012d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80012d2:	b10b      	cbz	r3, 80012d8 <__sflush_r+0x48>
 80012d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80012d6:	1ac0      	subs	r0, r0, r3
 80012d8:	2300      	movs	r3, #0
 80012da:	4602      	mov	r2, r0
 80012dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80012de:	6a21      	ldr	r1, [r4, #32]
 80012e0:	4628      	mov	r0, r5
 80012e2:	47b0      	blx	r6
 80012e4:	1c43      	adds	r3, r0, #1
 80012e6:	89a3      	ldrh	r3, [r4, #12]
 80012e8:	d106      	bne.n	80012f8 <__sflush_r+0x68>
 80012ea:	6829      	ldr	r1, [r5, #0]
 80012ec:	291d      	cmp	r1, #29
 80012ee:	d82b      	bhi.n	8001348 <__sflush_r+0xb8>
 80012f0:	4a29      	ldr	r2, [pc, #164]	; (8001398 <__sflush_r+0x108>)
 80012f2:	410a      	asrs	r2, r1
 80012f4:	07d6      	lsls	r6, r2, #31
 80012f6:	d427      	bmi.n	8001348 <__sflush_r+0xb8>
 80012f8:	2200      	movs	r2, #0
 80012fa:	6062      	str	r2, [r4, #4]
 80012fc:	04d9      	lsls	r1, r3, #19
 80012fe:	6922      	ldr	r2, [r4, #16]
 8001300:	6022      	str	r2, [r4, #0]
 8001302:	d504      	bpl.n	800130e <__sflush_r+0x7e>
 8001304:	1c42      	adds	r2, r0, #1
 8001306:	d101      	bne.n	800130c <__sflush_r+0x7c>
 8001308:	682b      	ldr	r3, [r5, #0]
 800130a:	b903      	cbnz	r3, 800130e <__sflush_r+0x7e>
 800130c:	6560      	str	r0, [r4, #84]	; 0x54
 800130e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001310:	602f      	str	r7, [r5, #0]
 8001312:	2900      	cmp	r1, #0
 8001314:	d0c9      	beq.n	80012aa <__sflush_r+0x1a>
 8001316:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800131a:	4299      	cmp	r1, r3
 800131c:	d002      	beq.n	8001324 <__sflush_r+0x94>
 800131e:	4628      	mov	r0, r5
 8001320:	f7ff febe 	bl	80010a0 <_free_r>
 8001324:	2000      	movs	r0, #0
 8001326:	6360      	str	r0, [r4, #52]	; 0x34
 8001328:	e7c0      	b.n	80012ac <__sflush_r+0x1c>
 800132a:	2301      	movs	r3, #1
 800132c:	4628      	mov	r0, r5
 800132e:	47b0      	blx	r6
 8001330:	1c41      	adds	r1, r0, #1
 8001332:	d1c8      	bne.n	80012c6 <__sflush_r+0x36>
 8001334:	682b      	ldr	r3, [r5, #0]
 8001336:	2b00      	cmp	r3, #0
 8001338:	d0c5      	beq.n	80012c6 <__sflush_r+0x36>
 800133a:	2b1d      	cmp	r3, #29
 800133c:	d001      	beq.n	8001342 <__sflush_r+0xb2>
 800133e:	2b16      	cmp	r3, #22
 8001340:	d101      	bne.n	8001346 <__sflush_r+0xb6>
 8001342:	602f      	str	r7, [r5, #0]
 8001344:	e7b1      	b.n	80012aa <__sflush_r+0x1a>
 8001346:	89a3      	ldrh	r3, [r4, #12]
 8001348:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800134c:	81a3      	strh	r3, [r4, #12]
 800134e:	e7ad      	b.n	80012ac <__sflush_r+0x1c>
 8001350:	690f      	ldr	r7, [r1, #16]
 8001352:	2f00      	cmp	r7, #0
 8001354:	d0a9      	beq.n	80012aa <__sflush_r+0x1a>
 8001356:	0793      	lsls	r3, r2, #30
 8001358:	680e      	ldr	r6, [r1, #0]
 800135a:	bf08      	it	eq
 800135c:	694b      	ldreq	r3, [r1, #20]
 800135e:	600f      	str	r7, [r1, #0]
 8001360:	bf18      	it	ne
 8001362:	2300      	movne	r3, #0
 8001364:	eba6 0807 	sub.w	r8, r6, r7
 8001368:	608b      	str	r3, [r1, #8]
 800136a:	f1b8 0f00 	cmp.w	r8, #0
 800136e:	dd9c      	ble.n	80012aa <__sflush_r+0x1a>
 8001370:	6a21      	ldr	r1, [r4, #32]
 8001372:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001374:	4643      	mov	r3, r8
 8001376:	463a      	mov	r2, r7
 8001378:	4628      	mov	r0, r5
 800137a:	47b0      	blx	r6
 800137c:	2800      	cmp	r0, #0
 800137e:	dc06      	bgt.n	800138e <__sflush_r+0xfe>
 8001380:	89a3      	ldrh	r3, [r4, #12]
 8001382:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001386:	81a3      	strh	r3, [r4, #12]
 8001388:	f04f 30ff 	mov.w	r0, #4294967295
 800138c:	e78e      	b.n	80012ac <__sflush_r+0x1c>
 800138e:	4407      	add	r7, r0
 8001390:	eba8 0800 	sub.w	r8, r8, r0
 8001394:	e7e9      	b.n	800136a <__sflush_r+0xda>
 8001396:	bf00      	nop
 8001398:	dfbffffe 	.word	0xdfbffffe

0800139c <_fflush_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	690b      	ldr	r3, [r1, #16]
 80013a0:	4605      	mov	r5, r0
 80013a2:	460c      	mov	r4, r1
 80013a4:	b913      	cbnz	r3, 80013ac <_fflush_r+0x10>
 80013a6:	2500      	movs	r5, #0
 80013a8:	4628      	mov	r0, r5
 80013aa:	bd38      	pop	{r3, r4, r5, pc}
 80013ac:	b118      	cbz	r0, 80013b6 <_fflush_r+0x1a>
 80013ae:	6a03      	ldr	r3, [r0, #32]
 80013b0:	b90b      	cbnz	r3, 80013b6 <_fflush_r+0x1a>
 80013b2:	f7ff fcd7 	bl	8000d64 <__sinit>
 80013b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d0f3      	beq.n	80013a6 <_fflush_r+0xa>
 80013be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80013c0:	07d0      	lsls	r0, r2, #31
 80013c2:	d404      	bmi.n	80013ce <_fflush_r+0x32>
 80013c4:	0599      	lsls	r1, r3, #22
 80013c6:	d402      	bmi.n	80013ce <_fflush_r+0x32>
 80013c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013ca:	f7ff fe66 	bl	800109a <__retarget_lock_acquire_recursive>
 80013ce:	4628      	mov	r0, r5
 80013d0:	4621      	mov	r1, r4
 80013d2:	f7ff ff5d 	bl	8001290 <__sflush_r>
 80013d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013d8:	07da      	lsls	r2, r3, #31
 80013da:	4605      	mov	r5, r0
 80013dc:	d4e4      	bmi.n	80013a8 <_fflush_r+0xc>
 80013de:	89a3      	ldrh	r3, [r4, #12]
 80013e0:	059b      	lsls	r3, r3, #22
 80013e2:	d4e1      	bmi.n	80013a8 <_fflush_r+0xc>
 80013e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013e6:	f7ff fe59 	bl	800109c <__retarget_lock_release_recursive>
 80013ea:	e7dd      	b.n	80013a8 <_fflush_r+0xc>

080013ec <__swhatbuf_r>:
 80013ec:	b570      	push	{r4, r5, r6, lr}
 80013ee:	460c      	mov	r4, r1
 80013f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f4:	2900      	cmp	r1, #0
 80013f6:	b096      	sub	sp, #88	; 0x58
 80013f8:	4615      	mov	r5, r2
 80013fa:	461e      	mov	r6, r3
 80013fc:	da0d      	bge.n	800141a <__swhatbuf_r+0x2e>
 80013fe:	89a3      	ldrh	r3, [r4, #12]
 8001400:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001404:	f04f 0100 	mov.w	r1, #0
 8001408:	bf0c      	ite	eq
 800140a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800140e:	2340      	movne	r3, #64	; 0x40
 8001410:	2000      	movs	r0, #0
 8001412:	6031      	str	r1, [r6, #0]
 8001414:	602b      	str	r3, [r5, #0]
 8001416:	b016      	add	sp, #88	; 0x58
 8001418:	bd70      	pop	{r4, r5, r6, pc}
 800141a:	466a      	mov	r2, sp
 800141c:	f000 f87c 	bl	8001518 <_fstat_r>
 8001420:	2800      	cmp	r0, #0
 8001422:	dbec      	blt.n	80013fe <__swhatbuf_r+0x12>
 8001424:	9901      	ldr	r1, [sp, #4]
 8001426:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800142a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800142e:	4259      	negs	r1, r3
 8001430:	4159      	adcs	r1, r3
 8001432:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001436:	e7eb      	b.n	8001410 <__swhatbuf_r+0x24>

08001438 <__smakebuf_r>:
 8001438:	898b      	ldrh	r3, [r1, #12]
 800143a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800143c:	079d      	lsls	r5, r3, #30
 800143e:	4606      	mov	r6, r0
 8001440:	460c      	mov	r4, r1
 8001442:	d507      	bpl.n	8001454 <__smakebuf_r+0x1c>
 8001444:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001448:	6023      	str	r3, [r4, #0]
 800144a:	6123      	str	r3, [r4, #16]
 800144c:	2301      	movs	r3, #1
 800144e:	6163      	str	r3, [r4, #20]
 8001450:	b002      	add	sp, #8
 8001452:	bd70      	pop	{r4, r5, r6, pc}
 8001454:	ab01      	add	r3, sp, #4
 8001456:	466a      	mov	r2, sp
 8001458:	f7ff ffc8 	bl	80013ec <__swhatbuf_r>
 800145c:	9900      	ldr	r1, [sp, #0]
 800145e:	4605      	mov	r5, r0
 8001460:	4630      	mov	r0, r6
 8001462:	f7ff fe89 	bl	8001178 <_malloc_r>
 8001466:	b948      	cbnz	r0, 800147c <__smakebuf_r+0x44>
 8001468:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800146c:	059a      	lsls	r2, r3, #22
 800146e:	d4ef      	bmi.n	8001450 <__smakebuf_r+0x18>
 8001470:	f023 0303 	bic.w	r3, r3, #3
 8001474:	f043 0302 	orr.w	r3, r3, #2
 8001478:	81a3      	strh	r3, [r4, #12]
 800147a:	e7e3      	b.n	8001444 <__smakebuf_r+0xc>
 800147c:	89a3      	ldrh	r3, [r4, #12]
 800147e:	6020      	str	r0, [r4, #0]
 8001480:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001484:	81a3      	strh	r3, [r4, #12]
 8001486:	9b00      	ldr	r3, [sp, #0]
 8001488:	6163      	str	r3, [r4, #20]
 800148a:	9b01      	ldr	r3, [sp, #4]
 800148c:	6120      	str	r0, [r4, #16]
 800148e:	b15b      	cbz	r3, 80014a8 <__smakebuf_r+0x70>
 8001490:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001494:	4630      	mov	r0, r6
 8001496:	f000 f851 	bl	800153c <_isatty_r>
 800149a:	b128      	cbz	r0, 80014a8 <__smakebuf_r+0x70>
 800149c:	89a3      	ldrh	r3, [r4, #12]
 800149e:	f023 0303 	bic.w	r3, r3, #3
 80014a2:	f043 0301 	orr.w	r3, r3, #1
 80014a6:	81a3      	strh	r3, [r4, #12]
 80014a8:	89a3      	ldrh	r3, [r4, #12]
 80014aa:	431d      	orrs	r5, r3
 80014ac:	81a5      	strh	r5, [r4, #12]
 80014ae:	e7cf      	b.n	8001450 <__smakebuf_r+0x18>

080014b0 <_putc_r>:
 80014b0:	b570      	push	{r4, r5, r6, lr}
 80014b2:	460d      	mov	r5, r1
 80014b4:	4614      	mov	r4, r2
 80014b6:	4606      	mov	r6, r0
 80014b8:	b118      	cbz	r0, 80014c2 <_putc_r+0x12>
 80014ba:	6a03      	ldr	r3, [r0, #32]
 80014bc:	b90b      	cbnz	r3, 80014c2 <_putc_r+0x12>
 80014be:	f7ff fc51 	bl	8000d64 <__sinit>
 80014c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80014c4:	07d8      	lsls	r0, r3, #31
 80014c6:	d405      	bmi.n	80014d4 <_putc_r+0x24>
 80014c8:	89a3      	ldrh	r3, [r4, #12]
 80014ca:	0599      	lsls	r1, r3, #22
 80014cc:	d402      	bmi.n	80014d4 <_putc_r+0x24>
 80014ce:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80014d0:	f7ff fde3 	bl	800109a <__retarget_lock_acquire_recursive>
 80014d4:	68a3      	ldr	r3, [r4, #8]
 80014d6:	3b01      	subs	r3, #1
 80014d8:	2b00      	cmp	r3, #0
 80014da:	60a3      	str	r3, [r4, #8]
 80014dc:	da05      	bge.n	80014ea <_putc_r+0x3a>
 80014de:	69a2      	ldr	r2, [r4, #24]
 80014e0:	4293      	cmp	r3, r2
 80014e2:	db12      	blt.n	800150a <_putc_r+0x5a>
 80014e4:	b2eb      	uxtb	r3, r5
 80014e6:	2b0a      	cmp	r3, #10
 80014e8:	d00f      	beq.n	800150a <_putc_r+0x5a>
 80014ea:	6823      	ldr	r3, [r4, #0]
 80014ec:	1c5a      	adds	r2, r3, #1
 80014ee:	6022      	str	r2, [r4, #0]
 80014f0:	701d      	strb	r5, [r3, #0]
 80014f2:	b2ed      	uxtb	r5, r5
 80014f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80014f6:	07da      	lsls	r2, r3, #31
 80014f8:	d405      	bmi.n	8001506 <_putc_r+0x56>
 80014fa:	89a3      	ldrh	r3, [r4, #12]
 80014fc:	059b      	lsls	r3, r3, #22
 80014fe:	d402      	bmi.n	8001506 <_putc_r+0x56>
 8001500:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001502:	f7ff fdcb 	bl	800109c <__retarget_lock_release_recursive>
 8001506:	4628      	mov	r0, r5
 8001508:	bd70      	pop	{r4, r5, r6, pc}
 800150a:	4629      	mov	r1, r5
 800150c:	4622      	mov	r2, r4
 800150e:	4630      	mov	r0, r6
 8001510:	f7ff fcbb 	bl	8000e8a <__swbuf_r>
 8001514:	4605      	mov	r5, r0
 8001516:	e7ed      	b.n	80014f4 <_putc_r+0x44>

08001518 <_fstat_r>:
 8001518:	b538      	push	{r3, r4, r5, lr}
 800151a:	4d07      	ldr	r5, [pc, #28]	; (8001538 <_fstat_r+0x20>)
 800151c:	2300      	movs	r3, #0
 800151e:	4604      	mov	r4, r0
 8001520:	4608      	mov	r0, r1
 8001522:	4611      	mov	r1, r2
 8001524:	602b      	str	r3, [r5, #0]
 8001526:	f000 f831 	bl	800158c <_fstat>
 800152a:	1c43      	adds	r3, r0, #1
 800152c:	d102      	bne.n	8001534 <_fstat_r+0x1c>
 800152e:	682b      	ldr	r3, [r5, #0]
 8001530:	b103      	cbz	r3, 8001534 <_fstat_r+0x1c>
 8001532:	6023      	str	r3, [r4, #0]
 8001534:	bd38      	pop	{r3, r4, r5, pc}
 8001536:	bf00      	nop
 8001538:	200001c0 	.word	0x200001c0

0800153c <_isatty_r>:
 800153c:	b538      	push	{r3, r4, r5, lr}
 800153e:	4d06      	ldr	r5, [pc, #24]	; (8001558 <_isatty_r+0x1c>)
 8001540:	2300      	movs	r3, #0
 8001542:	4604      	mov	r4, r0
 8001544:	4608      	mov	r0, r1
 8001546:	602b      	str	r3, [r5, #0]
 8001548:	f000 f828 	bl	800159c <_isatty>
 800154c:	1c43      	adds	r3, r0, #1
 800154e:	d102      	bne.n	8001556 <_isatty_r+0x1a>
 8001550:	682b      	ldr	r3, [r5, #0]
 8001552:	b103      	cbz	r3, 8001556 <_isatty_r+0x1a>
 8001554:	6023      	str	r3, [r4, #0]
 8001556:	bd38      	pop	{r3, r4, r5, pc}
 8001558:	200001c0 	.word	0x200001c0

0800155c <_sbrk_r>:
 800155c:	b538      	push	{r3, r4, r5, lr}
 800155e:	4d06      	ldr	r5, [pc, #24]	; (8001578 <_sbrk_r+0x1c>)
 8001560:	2300      	movs	r3, #0
 8001562:	4604      	mov	r4, r0
 8001564:	4608      	mov	r0, r1
 8001566:	602b      	str	r3, [r5, #0]
 8001568:	f000 f830 	bl	80015cc <_sbrk>
 800156c:	1c43      	adds	r3, r0, #1
 800156e:	d102      	bne.n	8001576 <_sbrk_r+0x1a>
 8001570:	682b      	ldr	r3, [r5, #0]
 8001572:	b103      	cbz	r3, 8001576 <_sbrk_r+0x1a>
 8001574:	6023      	str	r3, [r4, #0]
 8001576:	bd38      	pop	{r3, r4, r5, pc}
 8001578:	200001c0 	.word	0x200001c0

0800157c <_close>:
 800157c:	4b02      	ldr	r3, [pc, #8]	; (8001588 <_close+0xc>)
 800157e:	2258      	movs	r2, #88	; 0x58
 8001580:	601a      	str	r2, [r3, #0]
 8001582:	f04f 30ff 	mov.w	r0, #4294967295
 8001586:	4770      	bx	lr
 8001588:	200001c0 	.word	0x200001c0

0800158c <_fstat>:
 800158c:	4b02      	ldr	r3, [pc, #8]	; (8001598 <_fstat+0xc>)
 800158e:	2258      	movs	r2, #88	; 0x58
 8001590:	601a      	str	r2, [r3, #0]
 8001592:	f04f 30ff 	mov.w	r0, #4294967295
 8001596:	4770      	bx	lr
 8001598:	200001c0 	.word	0x200001c0

0800159c <_isatty>:
 800159c:	4b02      	ldr	r3, [pc, #8]	; (80015a8 <_isatty+0xc>)
 800159e:	2258      	movs	r2, #88	; 0x58
 80015a0:	601a      	str	r2, [r3, #0]
 80015a2:	2000      	movs	r0, #0
 80015a4:	4770      	bx	lr
 80015a6:	bf00      	nop
 80015a8:	200001c0 	.word	0x200001c0

080015ac <_lseek>:
 80015ac:	4b02      	ldr	r3, [pc, #8]	; (80015b8 <_lseek+0xc>)
 80015ae:	2258      	movs	r2, #88	; 0x58
 80015b0:	601a      	str	r2, [r3, #0]
 80015b2:	f04f 30ff 	mov.w	r0, #4294967295
 80015b6:	4770      	bx	lr
 80015b8:	200001c0 	.word	0x200001c0

080015bc <_read>:
 80015bc:	4b02      	ldr	r3, [pc, #8]	; (80015c8 <_read+0xc>)
 80015be:	2258      	movs	r2, #88	; 0x58
 80015c0:	601a      	str	r2, [r3, #0]
 80015c2:	f04f 30ff 	mov.w	r0, #4294967295
 80015c6:	4770      	bx	lr
 80015c8:	200001c0 	.word	0x200001c0

080015cc <_sbrk>:
 80015cc:	4a04      	ldr	r2, [pc, #16]	; (80015e0 <_sbrk+0x14>)
 80015ce:	6811      	ldr	r1, [r2, #0]
 80015d0:	4603      	mov	r3, r0
 80015d2:	b909      	cbnz	r1, 80015d8 <_sbrk+0xc>
 80015d4:	4903      	ldr	r1, [pc, #12]	; (80015e4 <_sbrk+0x18>)
 80015d6:	6011      	str	r1, [r2, #0]
 80015d8:	6810      	ldr	r0, [r2, #0]
 80015da:	4403      	add	r3, r0
 80015dc:	6013      	str	r3, [r2, #0]
 80015de:	4770      	bx	lr
 80015e0:	200001d0 	.word	0x200001d0
 80015e4:	200001d8 	.word	0x200001d8

080015e8 <_init>:
 80015e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ea:	bf00      	nop
 80015ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ee:	bc08      	pop	{r3}
 80015f0:	469e      	mov	lr, r3
 80015f2:	4770      	bx	lr

080015f4 <_fini>:
 80015f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015f6:	bf00      	nop
 80015f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015fa:	bc08      	pop	{r3}
 80015fc:	469e      	mov	lr, r3
 80015fe:	4770      	bx	lr
